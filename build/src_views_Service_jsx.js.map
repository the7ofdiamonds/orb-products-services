{"version":3,"file":"src_views_Service_jsx.js","mappings":";;;;;;;;;;;;;;;;;;;;;AAAyC;AACmB;AACL;AAEO;AAE9D,SAASO,gBAAgBA,CAAA,EAAG;EAC1B,MAAMC,QAAQ,GAAGL,6DAAW,CAAC,CAAC;EAC9B,MAAMM,WAAW,GAAGD,QAAQ,CAACE,QAAQ,CAACC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;EAEnD,MAAM;IAAEC,OAAO;IAAEC;EAAM,CAAC,GAAGT,wDAAW,CAAEU,KAAK,IAAKA,KAAK,CAACC,OAAO,CAAC;EAChE,MAAM;IAAEC,KAAK;IAAEC,WAAW;IAAEC,QAAQ;IAAEC,WAAW;IAAEC,OAAO;IAAEC,IAAI;IAAEC;EAAK,CAAC,GACtElB,wDAAW,CAAEU,KAAK,IAAKA,KAAK,CAACC,OAAO,CAACA,OAAO,CAAC;EAE/C,MAAMQ,QAAQ,GAAGlB,wDAAW,CAAC,CAAC;EAC9B,MAAMmB,QAAQ,GAAGtB,6DAAW,CAAC,CAAC;EAE9BD,gDAAS,CAAC,MAAM;IACdsB,QAAQ,CAACjB,0EAAY,CAACG,WAAW,CAAC,CAAC;EACrC,CAAC,EAAE,CAACc,QAAQ,EAAEd,WAAW,CAAC,CAAC;EAE3B,MAAMgB,WAAW,GAAGA,CAAA,KAAM;IACxBD,QAAQ,CAAC,iBAAiB,CAAC;EAC7B,CAAC;EAED,IAAIX,KAAK,EAAE;IACT,OACEa,iEAAA;MAAMC,SAAS,EAAC;IAAO,GACrBD,iEAAA;MAAKC,SAAS,EAAC;IAAiB,GAC9BD,iEAAA;MAAMC,SAAS,EAAC;IAAO,GAAC,+JAIlB,CACH,CACD,CAAC;EAEX;EAGA,IAAIf,OAAO,EAAE;IACX,OAAOc,iEAAA,cAAK,YAAe,CAAC;EAC9B;EAEA,OACEA,iEAAA,CAAAE,wDAAA,QACEF,iEAAA,aAAKV,KAAU,CAAC,EAEhBU,iEAAA;IAAKC,SAAS,EAAC;EAAc,GAC3BD,iEAAA;IAAGC,SAAS,EAAEL;EAAK,CAAI,CACpB,CAAC,EAENI,iEAAA;IAAKC,SAAS,EAAC;EAA4B,GACzCD,iEAAA,aAAI,UAAY,CAAC,EAEjBA,iEAAA;IAAKC,SAAS,EAAC;EAAkB,GAC9BT,QAAQ,IAAIA,QAAQ,CAACW,MAAM,GAC1BH,iEAAA,CAAC1B,uDAAc,QACZkB,QAAQ,CAACY,GAAG,CAAEC,OAAO,IACpBL,iEAAA,CAAAE,wDAAA,QACEF,iEAAA;IAAGC,SAAS,EAAC,cAAc;IAACK,EAAE,EAAC;EAAc,GAC1CD,OAAO,CAACE,IACR,CACH,CACH,CACa,CAAC,GAEjBP,iEAAA,aAAI,yBAA2B,CAE9B,CACF,CAAC,EAENA,iEAAA;IAAKC,SAAS,EAAC;EAAmB,GAChCD,iEAAA,aACGT,WACC,CAAC,EACLS,iEAAA;IAAKC,SAAS,EAAC;EAAS,GACtBD,iEAAA,YAAIN,OAAW,CACZ,CACF,CAAC,EAENM,iEAAA;IAAKC,SAAS,EAAC;EAAS,GACtBD,iEAAA,aAAI,aACS,EAAC,GAAG,EACd,IAAIQ,IAAI,CAACC,YAAY,CAAC,IAAI,EAAE;IAC3BC,KAAK,EAAE,UAAU;IACjBC,QAAQ,EAAE,KAAK;IACfC,qBAAqB,EAAE,CAAC;IACxBC,qBAAqB,EAAE;EACzB,CAAC,CAAC,CAACC,MAAM,CAACnB,IAAI,CACZ,CACD,CAAC,EAENK,iEAAA;IAAQC,SAAS,EAAC,WAAW;IAACc,OAAO,EAAEhB;EAAY,GACjDC,iEAAA;IAAGgB,KAAK,EAAC;EAAkB,CAAI,CAAC,EAChChB,iEAAA,aAAI,OAAS,CACP,CACR,CAAC;AAEP;AACA,iEAAenB,gBAAgB","sources":["webpack://orb-services/./src/views/Service.jsx"],"sourcesContent":["import React, { useEffect } from 'react';\nimport { useNavigate, useLocation } from 'react-router-dom';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport { fetchService } from '../controllers/serviceSlice.js';\n\nfunction ServiceComponent() {\n  const location = useLocation();\n  const servicePath = location.pathname.split('/')[2];\n\n  const { loading, error } = useSelector((state) => state.service);\n  const { title, description, features, action_word, content, cost, icon } =\n    useSelector((state) => state.service.service);\n\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    dispatch(fetchService(servicePath));\n  }, [dispatch, servicePath]);\n\n  const handleClick = () => {\n    navigate('/services/start');\n  };\n\n  if (error) {\n    return (\n      <main className=\"error\">\n        <div className=\"status-bar card\">\n          <span className=\"error\">\n            \"We encountered an issue while loading this page. Please try again,\n            and if the problem persists, kindly contact the website\n            administrators for assistance.\"\n          </span>\n        </div>\n      </main>\n    );\n  }\n\n\n  if (loading) {\n    return <div>Loading...</div>;\n  }\n\n  return (\n    <>\n      <h2>{title}</h2>\n\n      <div className=\"service-icon\">\n        <i className={icon}></i>\n      </div>\n\n      <div className=\"service-features-card card\">\n        <h3>Includes</h3>\n\n        <div className=\"service-features\">\n          {features && features.length ? (\n            <React.Fragment>\n              {features.map((feature) => (\n                <>\n                  <p className=\"feature-name\" id=\"feature_name\">\n                    {feature.name}\n                  </p>\n                </>\n              ))}\n            </React.Fragment>\n          ) : (\n            <h4>No features to show yet</h4>\n          )}\n        </div>\n      </div>\n\n      <div className=\"details-card card\">\n        <h4>\n          {description}\n        </h4>\n        <div className=\"details\">\n          <p>{content}</p>\n        </div>\n      </div>\n\n      <div className=\"pricing\">\n        <h4>\n          Starting at{' '}\n          {new Intl.NumberFormat('us', {\n            style: 'currency',\n            currency: 'USD',\n            minimumFractionDigits: 0,\n            maximumFractionDigits: 0,\n          }).format(cost)}\n        </h4>\n      </div>\n\n      <button className=\"start-btn\" onClick={handleClick}>\n        <i class=\"fas fa-power-off\"></i>\n        <h3>START</h3>\n      </button>\n    </>\n  );\n}\nexport default ServiceComponent;\n"],"names":["React","useEffect","useNavigate","useLocation","useSelector","useDispatch","fetchService","ServiceComponent","location","servicePath","pathname","split","loading","error","state","service","title","description","features","action_word","content","cost","icon","dispatch","navigate","handleClick","createElement","className","Fragment","length","map","feature","id","name","Intl","NumberFormat","style","currency","minimumFractionDigits","maximumFractionDigits","format","onClick","class"],"sourceRoot":""}