{"version":3,"file":"src_views_Schedule_jsx.js","mappings":"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","sources":["webpack://orb-services/./src/views/Schedule.jsx"],"sourcesContent":["import { useEffect, useRef, useState } from 'react';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport { getClient } from '../controllers/clientSlice';\nimport {\n  fetchCalendarEvents,\n  updateDate,\n  updateTime,\n  updateDueDate,\n  updateSummary,\n  updateEvent,\n  sendInvites,\n  updateDescription,\n  updateAttendees,\n} from '../controllers/scheduleSlice.js';\nimport { getAvailableServices } from '../controllers/servicesSlice';\nimport { getClientQuotes } from '../controllers/quoteSlice';\nimport { getClientInvoices } from '../controllers/invoiceSlice';\nimport { getClientReceipts } from '../controllers/receiptSlice';\n\nfunction ScheduleComponent() {\n  const { id } = useParams();\n\n  const { user_email, client_id, stripe_customer_id } = useSelector(\n    (state) => state.client\n  );\n  const {\n    loading,\n    scheduleError,\n    events,\n    start_date,\n    start_time,\n    event_id,\n    event_date_time,\n    summary,\n    description,\n    attendees,\n  } = useSelector((state) => state.schedule);\n  const { availableServices } = useSelector((state) => state.services);\n  const { quotes } = useSelector((state) => state.quote);\n  const { invoices } = useSelector((state) => state.invoice);\n  const { receipts } = useSelector((state) => state.receipt);\n\n  const [availableDates, setAvailableDates] = useState('');\n  const [availableTimes, setAvailableTimes] = useState('');\n  const [selectedDate, setSelectedDate] = useState('');\n  const [selectedTime, setSelectedTime] = useState('');\n  const [selectedSummary, setSelectedSummary] = useState('');\n  const [selectedDescription, setSelectedDescription] = useState('');\n  const [selectedAttendees, setSelectedAttendees] = useState([user_email]);\n  const [messageType, setMessageType] = useState('info');\n  const [message, setMessage] = useState('Choose a date and time to start');\n\n  const dateSelectRef = useRef(null);\n  const timeSelectRef = useRef(null);\n  const summarySelectRef = useRef(null);\n  const descriptionSelectRef = useRef(null);\n  const attendeesSelectRef = useRef(null);\n\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    dispatch(getClient());\n  }, [user_email, dispatch]);\n\n  useEffect(() => {\n    if (client_id && stripe_customer_id) {\n      dispatch(fetchCalendarEvents());\n    }\n  }, [client_id, stripe_customer_id, dispatch]);\n\n  useEffect(() => {\n    if (scheduleError) {\n      setMessageType('error');\n      setMessage(scheduleError);\n    }\n  }, [messageType, message]);\n\n  const getEvents = () => {\n    const datesAvail = events.map((event) => {\n      const dateTime = event.start;\n      const date = dateTime.split('T')[0];\n      return new Date(date).toLocaleDateString(undefined, {\n        year: 'numeric',\n        month: 'long',\n        day: 'numeric',\n      });\n    });\n    setAvailableDates(datesAvail);\n    setSelectedDate(datesAvail[0]);\n\n    if (dateSelectRef.current) {\n      const selectedIndex = dateSelectRef.current.selectedIndex;\n\n      if (selectedIndex >= 0) {\n        const timesAvail = events.map((event) => {\n          const dateTime = event.start;\n          const time = dateTime.split('T')[1];\n          const start = time.split('-')[0];\n          const endTime = time.split('-')[1];\n          const startHour = parseInt(start, 10);\n          const endHour =\n            parseInt(endTime, 10) < 12\n              ? parseInt(endTime, 10) + 12\n              : parseInt(endTime, 10);\n\n          const hours = [];\n\n          for (let i = startHour; i <= endHour; i++) {\n            hours.push(i);\n          }\n\n          return hours.map((hr) => {\n            return new Date(0, 0, 0, hr, 0, 0, 0).toLocaleTimeString('en-US', {\n              hour12: true,\n              hour: '2-digit',\n              minute: '2-digit',\n            });\n          });\n        });\n        setAvailableTimes(timesAvail[selectedIndex]);\n      }\n    }\n  };\n\n  useEffect(() => {\n    if (events) {\n      getEvents();\n    }\n  }, [events]);\n\n  useEffect(() => {\n    dateSelectRef.current = document.getElementById('date_select');\n    timeSelectRef.current = document.getElementById('time_select');\n    summarySelectRef.current = document.getElementById('summary_select');\n    descriptionSelectRef.current =\n      document.getElementById('description_select');\n    attendeesSelectRef.current = document.getElementById('description_select');\n\n    if (availableDates && availableDates.length > 0) {\n      setSelectedDate(availableDates[0]);\n    }\n  }, [availableDates]);\n\n  const handleDateChange = (event) => {\n    if (dateSelectRef.current) {\n      getEvents();\n      setSelectedDate(event.target.value);\n      dispatch(updateDate(event.target.value));\n      dispatch(updateDueDate());\n    }\n  };\n\n  const handleTimeChange = (event) => {\n    if (timeSelectRef.current) {\n      getEvents();\n      setSelectedTime(event.target.value);\n      dispatch(updateTime(event.target.value));\n      dispatch(updateDueDate());\n    }\n  };\n\n  useEffect(() => {\n    if (start_date && start_time) {\n      dispatch(updateEvent());\n    }\n  }, [start_date, start_time, dispatch]);\n\n  // Summary\n  useEffect(() => {\n    if (selectedTime) {\n      dispatch(getAvailableServices());\n    }\n  }, [selectedTime, dispatch]);\n\n  useEffect(() => {\n    if (availableServices && availableServices.length > 0) {\n      setSelectedSummary(availableServices[0].description);\n      dispatch(updateSummary(availableServices[0].description));\n    }\n  }, [availableServices, dispatch]);\n\n  const handleSummaryChange = (event) => {\n    if (summarySelectRef.current) {\n      setSelectedSummary(event.target.value);\n      dispatch(updateSummary(event.target.value));\n    }\n  };\n\n  // Description\n  useEffect(() => {\n    if (summary && stripe_customer_id) {\n      dispatch(getClientReceipts())\n        .then(() => {\n          dispatch(getClientInvoices());\n        })\n        .then(() => {\n          dispatch(getClientQuotes());\n        });\n    }\n  }, [summary, stripe_customer_id, dispatch]);\n\n  useEffect(() => {\n    if (\n      summary &&\n      descriptionSelectRef.current &&\n      descriptionSelectRef.current.options.length > 0\n    ) {\n      setSelectedDescription(descriptionSelectRef.current.options[0].value);\n      dispatch(\n        updateDescription(descriptionSelectRef.current.options[0].value)\n      );\n    }\n  }, [summary, dispatch]);\n\n  const handleDescriptionChange = (event) => {\n    if (descriptionSelectRef.current) {\n      setSelectedDescription(event.target.value);\n      dispatch(updateDescription(event.target.value));\n    }\n  };\n\n  // Attendees\n  useEffect(() => {\n    if (description !== '' && user_email) {\n      dispatch(updateAttendees(selectedAttendees));\n    }\n  }, [description, dispatch]);\n\n  const handleAttendeeChange = (event, index) => {\n    const updatedAttendees = [...selectedAttendees];\n    updatedAttendees[index] = event.target.value;\n    setSelectedAttendees(updatedAttendees);\n  };\n\n  const handleAddAttendee = () => {\n    setSelectedAttendees([...selectedAttendees]);\n  };\n\n  const handleRemoveAttendee = (index) => {\n    const updatedAttendees = selectedAttendees.filter((_, i) => i !== index);\n    setSelectedAttendees(updatedAttendees);\n  };\n\n  const handleClick = () => {\n    if (event_date_time) {\n      dispatch(sendInvites(id));\n    }\n  };\n\n  // useEffect(() => {\n  //   if (event_id) {\n  //     window.location.href = '/dashboard';\n  //   }\n  // }, [event_id]);\n\n  if (scheduleError) {\n    return (\n      <div className=\"status-bar card error\">\n        <span>{scheduleError}</span>\n      </div>\n    );\n  }\n\n  if (loading) {\n    return <div>Loading...</div>;\n  }\n\n  return (\n    <>\n      <div class=\"office-hours-card card\">\n        <table>\n          <thead>\n            <th>SUN</th>\n            <th>MON</th>\n            <th>TUE</th>\n            <th>WED</th>\n            <th>THU</th>\n            <th>FRI</th>\n            <th>SAT</th>\n          </thead>\n          <tr>\n            <td>1PM - 5PM</td>\n            <td>9AM - 5PM</td>\n            <td>9AM - 5PM</td>\n            <td>9AM - 5PM</td>\n            <td>9AM - 5PM</td>\n            <td>8AM - 4PM</td>\n            <td>CLOSED</td>\n          </tr>\n        </table>\n      </div>\n\n      <div className=\"schedule\" id=\"schedule\">\n        <div className=\"schedule-select\">\n          {availableDates && availableDates.length > 0 ? (\n            <div className=\"date-select card\">\n              <label htmlFor=\"date\">Choose a Date</label>\n              <select\n                type=\"text\"\n                name=\"date\"\n                id=\"date_select\"\n                ref={dateSelectRef}\n                onChange={handleDateChange}\n                defaultValue={selectedDate}\n                min={new Date().toISOString().split('T')[0]}>\n                {availableDates.map((date, index) => (\n                  <option key={index} value={date}>\n                    {date}\n                  </option>\n                ))}\n              </select>\n            </div>\n          ) : (\n            ''\n          )}\n\n          {availableTimes && availableTimes.length > 0 ? (\n            <div className=\"time-select card\">\n              <label htmlFor=\"time\">Choose a Time</label>\n              <select\n                type=\"time\"\n                name=\"time\"\n                id=\"time_select\"\n                ref={timeSelectRef}\n                defaultValue={selectedTime}\n                onChange={handleTimeChange}>\n                {availableTimes.map((time, index) => (\n                  <option key={index} value={time}>\n                    {time}\n                  </option>\n                ))}\n              </select>\n            </div>\n          ) : (\n            ''\n          )}\n        </div>\n      </div>\n\n      {availableServices && availableServices.length > 0 ? (\n        <div className=\"summary-select card\">\n          <label htmlFor=\"summary\">About</label>\n          <select\n            type=\"text\"\n            name=\"summary\"\n            id=\"summary_select\"\n            ref={summarySelectRef}\n            onChange={handleSummaryChange}\n            defaultValue={selectedSummary}>\n            {availableServices.map((service, index) => (\n              <option key={index} value={service.description}>\n                {service.description}\n              </option>\n            ))}\n          </select>\n        </div>\n      ) : (\n        ''\n      )}\n\n      {(receipts && receipts.length > 0) ||\n      (invoices && invoices.length > 0) ||\n      (quotes && quotes.length > 0) ? (\n        <div className=\"description-select card\">\n          <label htmlFor=\"description\">Details</label>\n          <select\n            type=\"text\"\n            name=\"description\"\n            id=\"description_select\"\n            ref={descriptionSelectRef}\n            onChange={handleDescriptionChange}\n            defaultValue={selectedDescription}>\n            {receipts.map((receipt, index) => (\n              <option key={index} value={`Receipt#${receipt.id}`}>\n                Receipt#{receipt.id}\n              </option>\n            ))}\n            {invoices.map((invoice, index) => (\n              <option key={index} value={`Invoice#${invoice.id}`}>\n                Invoice#{invoice.id}\n              </option>\n            ))}\n            {quotes.map((quote, index) => (\n              <option key={index} value={`Quote#${quote.id}`}>\n                Quote#{quote.id}\n              </option>\n            ))}\n          </select>\n        </div>\n      ) : (\n        ''\n      )}\n\n      {attendees && attendees.length > 0 ? (\n        <div className=\"attendees-select card\">\n          <label htmlFor=\"attendees\">Attendees</label>\n          {attendees.map((attendee, index) => (\n            <div className=\"attendee\">\n              <h4 key={index}>{attendee}</h4>\n              <button onClick={handleAddAttendee}>\n                <h4>+</h4>\n              </button>\n            </div>\n          ))}\n        </div>\n      ) : (\n        ''\n      )}\n\n      <div className=\"additional-attendee card\" id='additional_attendee'>\n        <label htmlFor=\"attendees\">Additional Attendee</label>\n        <div className=\"attendee\">\n          <input type=\"email\" />\n          <button className=\"remove-attendee\" onClick={handleRemoveAttendee}>\n            <h4>-</h4>\n          </button>\n          <button className=\"add-attendee\" onClick={handleAttendeeChange}>\n            <h4>+</h4>\n          </button>\n        </div>\n      </div>\n\n      {message && (\n        <div className={`status-bar card ${messageType}`}>\n          <span>{message}</span>\n        </div>\n      )}\n\n      <button onClick={handleClick}>\n        <h3>CONFIRM</h3>\n      </button>\n    </>\n  );\n}\n\nexport default ScheduleComponent;\n"],"names":["useEffect","useRef","useState","useNavigate","useParams","useSelector","useDispatch","getClient","fetchCalendarEvents","updateDate","updateTime","updateDueDate","updateSummary","updateEvent","sendInvites","updateDescription","updateAttendees","getAvailableServices","getClientQuotes","getClientInvoices","getClientReceipts","ScheduleComponent","id","user_email","client_id","stripe_customer_id","state","client","loading","scheduleError","events","start_date","start_time","event_id","event_date_time","summary","description","attendees","schedule","availableServices","services","quotes","quote","invoices","invoice","receipts","receipt","availableDates","setAvailableDates","availableTimes","setAvailableTimes","selectedDate","setSelectedDate","selectedTime","setSelectedTime","selectedSummary","setSelectedSummary","selectedDescription","setSelectedDescription","selectedAttendees","setSelectedAttendees","messageType","setMessageType","message","setMessage","dateSelectRef","timeSelectRef","summarySelectRef","descriptionSelectRef","attendeesSelectRef","dispatch","navigate","getEvents","datesAvail","map","event","dateTime","start","date","split","Date","toLocaleDateString","undefined","year","month","day","current","selectedIndex","timesAvail","time","endTime","startHour","parseInt","endHour","hours","i","push","hr","toLocaleTimeString","hour12","hour","minute","document","getElementById","length","handleDateChange","target","value","handleTimeChange","handleSummaryChange","then","options","handleDescriptionChange","handleAttendeeChange","index","updatedAttendees","handleAddAttendee","handleRemoveAttendee","filter","_","handleClick","createElement","className","Fragment","class","htmlFor","type","name","ref","onChange","defaultValue","min","toISOString","key","service","attendee","onClick"],"sourceRoot":""}