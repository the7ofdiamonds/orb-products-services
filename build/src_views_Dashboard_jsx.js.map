{"version":3,"file":"src_views_Dashboard_jsx.js","mappings":"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","sources":["webpack://orb-services/./src/views/Dashboard.jsx","webpack://orb-services/./src/views/dashboard/UserInvoice.jsx","webpack://orb-services/./src/views/dashboard/UserQuote.jsx","webpack://orb-services/./src/views/dashboard/UserReceipt.jsx","webpack://orb-services/./src/views/dashboard/UserSchedule.jsx"],"sourcesContent":["import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport UserScheduleComponent from './dashboard/UserSchedule';\nimport UserReceiptComponent from './dashboard/UserReceipt';\nimport UserInvoiceComponent from './dashboard/UserInvoice';\nimport UserQuoteComponent from './dashboard/UserQuote';\n\nfunction DashboardComponent() {\n  return (\n    <>\n      {/* <UserScheduleComponent />\n      <UserReceiptComponent />\n      <UserInvoiceComponent /> */}\n      <UserQuoteComponent />\n    </>\n  );\n}\n\nexport default DashboardComponent;\n","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { getClient } from '../../controllers/clientSlice';\nimport { getInvoices } from '../../controllers/invoiceSlice';\n\nfunction UserInvoiceComponent() {\n  const dispatch = useDispatch();\n\n  const { user_email, stripe_customer_id } = useSelector(\n    (state) => state.client\n  );\n  const { loading, error, invoices } = useSelector((state) => state.invoice);\n\n  useEffect(() => {\n    if (user_email) {\n      dispatch(getClient());\n    }\n  }, [user_email, dispatch]);\n\n  useEffect(() => {\n    if (stripe_customer_id) {\n      dispatch(getInvoices());\n    }\n  }, [stripe_customer_id, dispatch]);\n\n  if (error) {\n    return (\n      <>\n        <main className=\"error\">\n          <div className=\"status-bar card\">\n            <span className=\"error\">\n              <h4>There was an error or no invoices to show at this time.</h4>\n            </span>\n          </div>\n        </main>\n      </>\n    );\n  }\n\n  if (loading) {\n    return <div>Loading...</div>;\n  }\n\n  return (\n    <>\n      {Array.isArray(invoices) && invoices.length > 0 ? (\n        <div className=\"card invoice\">\n          <table>\n            <thead>\n              <tr>\n                <th>\n                  <h4>Invoice ID</h4>\n                </th>\n                <th>\n                  <h4>Status</h4>\n                </th>\n                <th>\n                  <h4>Balance</h4>\n                </th>\n                <th>\n                  <h4>Page</h4>\n                </th>\n              </tr>\n            </thead>\n            <tbody>\n              {invoices.map((invoice) => (\n                <>\n                  <tr>\n                    <td>{invoice.id}</td>\n                    <td>{invoice.status}</td>\n                    <td>\n                      {new Intl.NumberFormat('us', {\n                        style: 'currency',\n                        currency: 'USD',\n                      }).format(invoice.amount_remaining)}\n                    </td>\n                    <td>\n                      <a href={`/services/invoice/${invoice.id}`}>\n                        {invoice.status === 'paid' ? (\n                          <h5>View</h5>\n                        ) : invoice.status === 'void' ? (\n                          <h5>Void</h5>\n                        ) : invoice.status === 'uncollectible' ? (\n                          <h5>Uncollectible</h5>\n                        ) : invoice.status === 'open' ? (\n                          <h5>Continue</h5>\n                        ) : (\n                          <h5>Change</h5>\n                        )}\n                      </a>\n                    </td>\n                  </tr>\n                </>\n              ))}\n            </tbody>\n          </table>\n        </div>\n      ) : (\n        ''\n      )}\n    </>\n  );\n}\n\nexport default UserInvoiceComponent;\n","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { getClient } from '../../controllers/clientSlice';\nimport { getClientQuotes, pdfQuote } from '../../controllers/quoteSlice';\n\nfunction UserQuoteComponent() {\n  const dispatch = useDispatch();\n\n  const { user_email, stripe_customer_id } = useSelector(\n    (state) => state.client\n  );\n  const { loading, error, quotes, pdf } = useSelector((state) => state.quote);\n\n  useEffect(() => {\n    if (user_email) {\n      dispatch(getClient());\n    }\n  }, [user_email, dispatch]);\n\n  useEffect(() => {\n    if (stripe_customer_id) {\n      dispatch(getClientQuotes());\n    }\n  }, [stripe_customer_id, dispatch]);\n\n  const handlePDFClick = async (quoteId) => {\n    try {\n      const response = await dispatch(pdfQuote(quoteId));\n      const base64String = response.payload;\n\n      // Convert the base64 string back to a Blob\n      const byteCharacters = atob(base64String.split(',')[1]);\n      const byteArrays = [];\n      for (let offset = 0; offset < byteCharacters.length; offset += 512) {\n        const slice = byteCharacters.slice(offset, offset + 512);\n        const byteNumbers = new Array(slice.length);\n        for (let i = 0; i < slice.length; i++) {\n          byteNumbers[i] = slice.charCodeAt(i);\n        }\n        const byteArray = new Uint8Array(byteNumbers);\n        byteArrays.push(byteArray);\n      }\n      const blob = new Blob(byteArrays, { type: 'application/pdf' });\n\n      // Rest of the code for initiating the download remains the same\n      if (window.navigator && window.navigator.msSaveOrOpenBlob) {\n        // For Internet Explorer or Microsoft Edge\n        window.navigator.msSaveOrOpenBlob(blob, `quote_${quoteId}.pdf`);\n      } else {\n        // For other modern browsers\n        const url = URL.createObjectURL(blob);\n        const a = document.createElement('a');\n        a.href = url;\n        a.download = `quote_${quoteId}.pdf`;\n        a.click();\n\n        // Release the object URL after the download is initiated\n        URL.revokeObjectURL(url);\n      }\n    } catch (error) {\n      console.error('Error downloading PDF:', error);\n    }\n  };\n\n  useEffect(() => {\n    return () => {\n      if (pdf) {\n        URL.revokeObjectURL(pdf);\n      }\n    };\n  }, [pdf]);\n\n  if (error) {\n    return (\n      <>\n        <main className=\"error\">\n          <div className=\"status-bar card\">\n            <span className=\"error\">\n              <h4>There was an error or no quotes to show at this time.</h4>\n            </span>\n          </div>\n        </main>\n      </>\n    );\n  }\n\n  if (loading) {\n    return <div>Loading...</div>;\n  }\n\n  return (\n    <>\n      {Array.isArray(quotes) && quotes.length > 0 ? (\n        <div className=\"card quote\">\n          <table>\n            <thead>\n              <tr>\n                <th>\n                  <h4>Quote ID</h4>\n                </th>\n                <th>\n                  <h4>Status</h4>\n                </th>\n                <th>\n                  <h4>Total</h4>\n                </th>\n                <th>\n                  <h4>Page</h4>\n                </th>\n              </tr>\n            </thead>\n            <tbody>\n              {quotes.map((quote) => (\n                <>\n                  <tr>\n                    <td>{quote.id}</td>\n                    <td>{quote.status}</td>\n                    <td>\n                      {new Intl.NumberFormat('us', {\n                        style: 'currency',\n                        currency: 'USD',\n                      }).format(quote.amount_total)}\n                    </td>\n                    <td>\n                      {quote.status === 'accepted' ? (\n                        <button onClick={() => handlePDFClick(quote.id)}>\n                          <h5>Download</h5>\n                        </button>\n                      ) : quote.status === 'canceled' ? (\n                        <a href={`/services/quote/${quote.id}`}>\n                          <h5>Canceled</h5>\n                        </a>\n                      ) : quote.status === 'open' ? (\n                        <a href={`/services/quote/${quote.id}`}>\n                          <h5>Confirm</h5>\n                        </a>\n                      ) : (\n                        <a href={`/services/quote/${quote.id}`}>\n                          <h5>Change</h5>\n                        </a>\n                      )}\n                    </td>\n                  </tr>\n                </>\n              ))}\n            </tbody>\n          </table>\n        </div>\n      ) : (\n        ''\n      )}\n    </>\n  );\n}\n\nexport default UserQuoteComponent;\n","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { getClient } from '../../controllers/clientSlice';\nimport { getReceipts } from '../../controllers/receiptSlice';\n\nfunction UserReceiptComponent() {\n  const dispatch = useDispatch();\n\n  const { user_email, stripe_customer_id } = useSelector(\n    (state) => state.client\n  );\n  const { loading, error, receipts } = useSelector((state) => state.receipt);\n\n  useEffect(() => {\n    if (user_email) {\n      dispatch(getClient());\n    }\n  }, [user_email, dispatch]);\n\n  useEffect(() => {\n    if (stripe_customer_id) {\n      dispatch(getReceipts());\n    }\n  }, [stripe_customer_id, dispatch]);\n\n  if (error) {\n    return (\n      <>\n        <main className=\"error\">\n          <div className=\"status-bar card\">\n            <span className=\"error\">\n              <h4>There was an error or no receipts to show at this time.</h4>\n            </span>\n          </div>\n        </main>\n      </>\n    );\n  }\n\n  if (loading) {\n    return <div>Loading...</div>;\n  }\n\n  return (\n    <>\n      {Array.isArray(receipts) && receipts.length > 0 ? (\n        <div className=\"card receipt\">\n          <table>\n            <thead>\n              <tr>\n                <th>\n                  <h4>Receipt ID</h4>\n                </th>\n                <th>\n                  <h4>Invoice ID</h4>\n                </th>\n                <th>\n                  <h4>Page</h4>\n                </th>\n              </tr>\n            </thead>\n            <tbody>\n              {receipts.map((receipt) => (\n                <>\n                  <tr key={receipt.id}>\n                    <td>{receipt.id}</td>\n                    <td>{receipt.invoice_id}</td>\n                    <td>\n                      <a href={`/services/receipt/${receipt.id}`}>\n                        <h5>View</h5>\n                      </a>\n                    </td>\n                  </tr>\n                </>\n              ))}\n            </tbody>\n          </table>\n        </div>\n      ) : (\n        ''\n      )}\n    </>\n  );\n}\n\nexport default UserReceiptComponent;\n","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { getClient } from '../../controllers/clientSlice';\nimport { getEvents } from '../../controllers/scheduleSlice';\n\nfunction UserScheduleComponent() {\n  const dispatch = useDispatch();\n\n  const { user_email, client_id } = useSelector((state) => state.client);\n  const { loading, error, events } = useSelector((state) => state.schedule);\n\n  useEffect(() => {\n    if (user_email) {\n      dispatch(getClient());\n    }\n  }, [user_email, dispatch]);\n\n  useEffect(() => {\n    if (client_id) {\n      dispatch(getEvents());\n    }\n  }, [client_id, dispatch]);\n\n  if (error) {\n    return (\n      <>\n        <main className=\"error\">\n          <div className=\"status-bar card\">\n            <span className=\"error\">\n              <h4>There is nothing on your schedule to show at this time</h4>\n            </span>\n          </div>\n        </main>\n      </>\n    );\n  }\n\n  if (loading) {\n    return <div>Loading...</div>;\n  }\n\n  return (\n    <>\n      {Array.isArray(events) && events.length > 0 ? (\n        <div className=\"card schedule\">\n          <table>\n            <thead>\n              <tr>\n                <th>\n                  <h4>Invoice ID</h4>\n                </th>\n                <th>\n                  <h4>Start Date</h4>\n                </th>\n                <th>\n                  <h4>Start Time</h4>\n                </th>\n              </tr>\n            </thead>\n            <tbody>\n              {events.map((event) => (\n                <>\n                  <tr>\n                    <td>{event.invoice_id}</td>\n                    <td>{event.start_date}</td>\n                    <td>{event.start_time}</td>\n                  </tr>\n                </>\n              ))}\n            </tbody>\n          </table>\n        </div>\n      ) : (\n        ''\n      )}\n    </>\n  );\n}\n\nexport default UserScheduleComponent;\n"],"names":["React","useEffect","useDispatch","useSelector","UserScheduleComponent","UserReceiptComponent","UserInvoiceComponent","UserQuoteComponent","DashboardComponent","createElement","Fragment","getClient","getInvoices","dispatch","user_email","stripe_customer_id","state","client","loading","error","invoices","invoice","className","Array","isArray","length","map","id","status","Intl","NumberFormat","style","currency","format","amount_remaining","href","getClientQuotes","pdfQuote","quotes","pdf","quote","handlePDFClick","quoteId","response","base64String","payload","byteCharacters","atob","split","byteArrays","offset","slice","byteNumbers","i","charCodeAt","byteArray","Uint8Array","push","blob","Blob","type","window","navigator","msSaveOrOpenBlob","url","URL","createObjectURL","a","document","download","click","revokeObjectURL","console","amount_total","onClick","getReceipts","receipts","receipt","key","invoice_id","getEvents","client_id","events","schedule","event","start_date","start_time"],"sourceRoot":""}