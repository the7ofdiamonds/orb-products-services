{"version":3,"file":"src_views_Billing_jsx.js","mappings":"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","sources":["webpack://orb-products-services/./src/views/Billing.jsx","webpack://orb-products-services/./src/views/BillingInvoices.jsx","webpack://orb-products-services/./src/views/BillingQuotes.jsx","webpack://orb-products-services/./src/views/BillingReceipts.jsx"],"sourcesContent":["import React from 'react';\n\nimport BillingReceipt from './BillingReceipts';\nimport BillingInvoice from './BillingInvoices';\nimport BillingQuote from './BillingQuotes';\n\nfunction Billing() {\n  return (\n    <>\n      <section className=\"billing\">\n        <h2 className=\"title\">billing</h2>\n\n        <BillingReceipt />\n        <BillingInvoice />\n        <BillingQuote />\n      </section>\n    </>\n  );\n}\n\nexport default Billing;\n","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { getClient } from '../controllers/clientSlice';\nimport {\n  getClientInvoices,\n  deleteInvoice,\n} from '../controllers/invoiceSlice';\n\nfunction BillingInvoices() {\n  const dispatch = useDispatch();\n\n  const { user_email, stripe_customer_id } = useSelector(\n    (state) => state.client\n  );\n  const { invoiceLoading, invoiceError, invoices } = useSelector(\n    (state) => state.invoice\n  );\n\n  useEffect(() => {\n    if (user_email) {\n      dispatch(getClient());\n    }\n  }, [user_email, dispatch]);\n\n  useEffect(() => {\n    if (stripe_customer_id) {\n      dispatch(getClientInvoices());\n    }\n  }, [stripe_customer_id, dispatch]);\n\n  if (invoiceLoading) {\n    return <div>Loading...</div>;\n  }\n\n  if (invoiceError) {\n    return (\n      <>\n        <div className=\"status-bar card error\">\n          <span>\n            <h4>{invoiceError}</h4>\n          </span>\n        </div>\n      </>\n    );\n  }\n\n  const now = new Date().getTime();\n  let sortedInvoices = [];\n\n  if (Array.isArray(invoices)) {\n    sortedInvoices = invoices.slice().sort((a, b) => {\n      const timeDiffA = Math.abs(a.due_date - now);\n      const timeDiffB = Math.abs(b.due_date - now);\n\n      return timeDiffA - timeDiffB;\n    });\n  }\n\n  return (\n    <>\n      {Array.isArray(sortedInvoices) && sortedInvoices.length > 0 ? (\n        <div className=\"card invoice\">\n          <table>\n            <thead>\n              <tr>\n                <th>\n                  <h4>Invoice ID</h4>\n                </th>\n                <th>\n                  <h4>Status</h4>\n                </th>\n                <th>\n                  <h4>Balance</h4>\n                </th>\n                <th>\n                  <h4>Due Date</h4>\n                </th>\n                <th>\n                  <h4>Quote ID</h4>\n                </th>\n                <th>\n                  <h4>Page</h4>\n                </th>\n              </tr>\n            </thead>\n            <tbody>\n              {sortedInvoices.map((invoice) => (\n                <>\n                  <tr>\n                    <td>{invoice.id}</td>\n                    <td>{invoice.status}</td>\n                    <td>\n                      {/* add currency column using var invoice.currency */}\n                      {new Intl.NumberFormat('us', {\n                        style: 'currency',\n                        currency: 'USD',\n                      }).format(invoice.amount_remaining)}\n                    </td>\n                    <td>\n                      {invoice.due_date\n                        ? new Date(invoice.due_date * 1000).toLocaleString()\n                        : ''}\n                    </td>\n                    <td>{invoice.quote_id}</td>\n                    <td>\n                      {invoice.status === 'deleted' ? (\n                        <h5>Deleted</h5>\n                      ) : invoice.status === 'paid' ? (\n                        <a href={`/services/invoice/${invoice.id}`}>\n                          <button>\n                            <h5>View</h5>\n                          </button>\n                        </a>\n                      ) : invoice.status === 'void' ? (\n                        <h5>Void</h5>\n                      ) : invoice.status === 'uncollectible' ? (\n                        <h5>Uncollectible</h5>\n                      ) : invoice.status === 'open' ? (\n                        <a href={`/services/invoice/${invoice.id}`}>\n                          <h5>Continue</h5>\n                        </a>\n                      ) : (\n                        <a>\n                          <button\n                            onClick={async () =>\n                              await dispatch(\n                                deleteInvoice(invoice.stripe_invoice_id)\n                              ).then(() => {\n                                dispatch(getClientInvoices());\n                              })\n                            }>\n                            <h5>Delete</h5>\n                          </button>\n                        </a>\n                      )}\n                    </td>\n                  </tr>\n                </>\n              ))}\n            </tbody>\n          </table>\n        </div>\n      ) : (\n        ''\n      )}\n    </>\n  );\n}\n\nexport default BillingInvoices;\n","import React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { getClient } from '../controllers/clientSlice';\nimport { getClientQuotes } from '../controllers/quoteSlice';\n\nfunction BillingQuotes() {\n  const dispatch = useDispatch();\n\n  const { user_email, stripe_customer_id } = useSelector(\n    (state) => state.client\n  );\n  const { loading, quoteError, quotes, pdf } = useSelector(\n    (state) => state.quote\n  );\n\n  useEffect(() => {\n    if (user_email) {\n      dispatch(getClient());\n    }\n  }, [user_email, dispatch]);\n\n  useEffect(() => {\n    if (stripe_customer_id) {\n      dispatch(getClientQuotes());\n    }\n  }, [stripe_customer_id, dispatch]);\n\n  if (quoteError) {\n    return (\n      <>\n        <div className=\"status-bar card error\">\n          <span>\n            <h4>{quoteError}</h4>\n          </span>\n        </div>\n      </>\n    );\n  }\n\n  if (loading) {\n    return <div>Loading...</div>;\n  }\n\n  const now = new Date().getTime();\n  let sortedQuotes = [];\n\n  if (Array.isArray(quotes)) {\n    sortedQuotes = quotes.slice().sort((a, b) => {\n      const timeDiffA = Math.abs(a.expires_at - now);\n      const timeDiffB = Math.abs(b.expires_at - now);\n\n      return timeDiffA - timeDiffB;\n    });\n  }\n\n  return (\n    <>\n      {Array.isArray(sortedQuotes) && sortedQuotes.length > 0 ? (\n        <div className=\"card quote\">\n          <table>\n            <thead>\n              <tr>\n                <th>\n                  <h4>Quote ID</h4>\n                </th>\n                <th>\n                  <h4>Status</h4>\n                </th>\n                <th>\n                  <h4>Total</h4>\n                </th>\n                <th>\n                  <h4>Page</h4>\n                </th>\n              </tr>\n            </thead>\n            <tbody>\n              {sortedQuotes.map((quote) => (\n                <>\n                  <tr>\n                    <td>{quote.id}</td>\n                    <td>{quote.status}</td>\n                    <td>\n                      {new Intl.NumberFormat('us', {\n                        style: 'currency',\n                        currency: 'USD',\n                      }).format(quote.amount_total)}\n                    </td>\n                    <td>\n                      {quote.status === 'accepted' ? (\n                        <h5>Accepted</h5>\n                      ) : quote.status === 'canceled' ? (\n                        <h5>Canceled</h5>\n                      ) : (\n                        <a href={`/services/quote/${quote.id}`}>\n                          <h5>Confirm</h5>\n                        </a>\n                      )}\n                    </td>\n                  </tr>\n                </>\n              ))}\n            </tbody>\n          </table>\n        </div>\n      ) : (\n        ''\n      )}\n    </>\n  );\n}\n\nexport default BillingQuotes;\n","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { getClient } from '../controllers/clientSlice';\nimport { getClientReceipts } from '../controllers/receiptSlice';\n\nfunction BillingReceipts() {\n  const dispatch = useDispatch();\n\n  const { user_email, stripe_customer_id } = useSelector(\n    (state) => state.client\n  );\n  const { loading, receiptError, receipts } = useSelector(\n    (state) => state.receipt\n  );\n\n  useEffect(() => {\n    if (user_email) {\n      dispatch(getClient());\n    }\n  }, [user_email, dispatch]);\n\n  useEffect(() => {\n    if (stripe_customer_id) {\n      dispatch(getClientReceipts());\n    }\n  }, [stripe_customer_id, dispatch]);\n\n  if (receiptError) {\n    return (\n      <>\n        <div className=\"status-bar card error\">\n          <span>\n            <h4>{receiptError}</h4>\n          </span>\n        </div>\n      </>\n    );\n  }\n\n  if (loading) {\n    return <div>Loading...</div>;\n  }\n\n  const now = new Date().getTime();\n  let sortedReceipts = [];\n\n  if (Array.isArray(receipts)) {\n    sortedReceipts = receipts.slice().sort((a, b) => {\n      const timeDiffA = Math.abs(a.payment_date - now);\n      const timeDiffB = Math.abs(b.payment_date - now);\n\n      return timeDiffA - timeDiffB;\n    });\n  }\n\n  return (\n    <>\n      {Array.isArray(sortedReceipts) && sortedReceipts.length > 0 ? (\n        <div className=\"card receipt\">\n          <table>\n            <thead>\n              <tr>\n                <th>\n                  <h4>Receipt ID</h4>\n                </th>\n                <th>\n                  <h4>Amount Paid</h4>\n                </th>\n                <th>\n                  <h4>Balance</h4>\n                </th>\n                <th>\n                  <h4>Invoice ID</h4>\n                </th>\n                <th>\n                  <h4>PDF</h4>\n                </th>\n              </tr>\n            </thead>\n            <tbody>\n              {sortedReceipts.map((receipt) => (\n                <>\n                  <tr key={receipt.id}>\n                    <td>{receipt.id}</td>\n                    <td>\n                      {/* add locales column & currency column Ex: invoice.currency */}\n                      {new Intl.NumberFormat('us', {\n                        style: 'currency',\n                        currency: 'USD',\n                      }).format(receipt.amount_paid)}\n                    </td>\n                    <td>\n                      {new Intl.NumberFormat('us', {\n                        style: 'currency',\n                        currency: 'USD',\n                      }).format(receipt.balance)}\n                    </td>\n                    <td>{receipt.invoice_id}</td>\n                    <td>\n                      <a href={receipt.receipt_pdf_url} target=\"_blank\">\n                        <button>\n                          <h5>Download</h5>\n                        </button>\n                      </a>\n                    </td>\n                  </tr>\n                </>\n              ))}\n            </tbody>\n          </table>\n        </div>\n      ) : (\n        ''\n      )}\n    </>\n  );\n}\n\nexport default BillingReceipts;\n"],"names":["React","BillingReceipt","BillingInvoice","BillingQuote","Billing","createElement","Fragment","className","useEffect","useDispatch","useSelector","getClient","getClientInvoices","deleteInvoice","BillingInvoices","dispatch","user_email","stripe_customer_id","state","client","invoiceLoading","invoiceError","invoices","invoice","now","Date","getTime","sortedInvoices","Array","isArray","slice","sort","a","b","timeDiffA","Math","abs","due_date","timeDiffB","length","map","id","status","Intl","NumberFormat","style","currency","format","amount_remaining","toLocaleString","quote_id","href","onClick","stripe_invoice_id","then","useState","getClientQuotes","BillingQuotes","loading","quoteError","quotes","pdf","quote","sortedQuotes","expires_at","amount_total","getClientReceipts","BillingReceipts","receiptError","receipts","receipt","sortedReceipts","payment_date","key","amount_paid","balance","invoice_id","receipt_pdf_url","target"],"sourceRoot":""}