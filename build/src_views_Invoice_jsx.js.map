{"version":3,"file":"src_views_Invoice_jsx.js","mappings":"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","sources":["webpack://orb-services/./src/views/Invoice.jsx"],"sourcesContent":["import { useNavigate, useParams } from 'react-router-dom';\nimport { useEffect } from 'react';\n\nimport { useSelector, useDispatch } from 'react-redux';\nimport { getClient } from '../controllers/clientSlice.js';\nimport { getStripeCustomer } from '../controllers/customerSlice.js';\nimport { getQuote } from '../controllers/quoteSlice.js';\nimport {\n  getStripeInvoice,\n  getInvoice,\n  finalizeInvoice,\n} from '../controllers/invoiceSlice.js';\nimport { getPaymentIntent } from '../controllers/paymentSlice.js';\n\nfunction InvoiceComponent() {\n  const { id } = useParams();\n\n  const { user_email, stripe_customer_id } = useSelector(\n    (state) => state.client\n  );\n  const {\n    loading,\n    error,\n    status,\n    quote_id,\n    customer_name,\n    customer_tax_ids,\n    address_line_1,\n    address_line_2,\n    city,\n    state,\n    postal_code,\n    customer_phone,\n    customer_email,\n    stripe_invoice_id,\n    event_id,\n    due_date,\n    amount_due,\n    subtotal,\n    tax,\n    payment_intent_id,\n    items,\n  } = useSelector((state) => state.invoice);\n  const { client_secret } = useSelector((state) => state.payment);\n\n  const dueDate = new Date(due_date * 1000).toLocaleString();\n  const amountDue = amount_due / 100;\n  const subTotal = subtotal / 100;\n  const Tax = tax / 100;\n  const grandTotal = amount_due / 100;\n\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    if (user_email) {\n      dispatch(getClient());\n    }\n  }, [user_email, dispatch]);\n\n  useEffect(() => {\n    if (stripe_customer_id) {\n      dispatch(getStripeCustomer());\n    }\n  }, [stripe_customer_id, dispatch]);\n\n  useEffect(() => {\n    if (stripe_customer_id) {\n      dispatch(getInvoice(id));\n    }\n  }, [id, stripe_customer_id, dispatch]);\n\n  useEffect(() => {\n    if (stripe_invoice_id) {\n      dispatch(getStripeInvoice(stripe_invoice_id));\n    }\n  }, [stripe_invoice_id, dispatch]);\n\n  useEffect(() => {\n    if (quote_id && stripe_customer_id) {\n      dispatch(getQuote(quote_id));\n    }\n  }, [quote_id, stripe_customer_id, dispatch]);\n\n  useEffect(() => {\n    if (payment_intent_id) {\n      dispatch(getPaymentIntent());\n    }\n  }, [payment_intent_id, dispatch]);\n\n  //Event id mast be validated\n  const handleClick = async () => {\n    if (status === 'paid') {\n      navigate(`/services/receipt/${id}`);\n    } else if (status === 'open' && event_id && client_secret) {\n      navigate(`/services/payment/${id}`);\n    } else if (status === 'open' && client_secret) {\n      navigate(`/services/schedule/${id}`);\n    } else if (stripe_invoice_id) {\n      await dispatch(finalizeInvoice())\n        .then(() => {\n          dispatch(getInvoice(id));\n        })\n        .then(() => {\n          navigate(`/services/schedule/${id}`);\n        });\n    }\n  };\n  console.log(customer_tax_ids.length);\n  if (error) {\n    return (\n      <main>\n        <div className=\"status-bar card error\">\n          <span>\n            You have either entered the wrong Invoice ID, or you are not the\n            client to whom this invoice belongs.\n          </span>\n        </div>\n      </main>\n    );\n  }\n\n  if (loading) {\n    return <div>Loading...</div>;\n  }\n\n  return (\n    <>\n      <h2 className=\"title\">INVOICE</h2>\n      <div className=\"invoice-card card\">\n        <table className=\"invoice-table\" id=\"service_invoice\">\n          <thead className=\"invoice-table-head\" id=\"service-total-header\">\n            <tr>\n              <th className=\"bill-to-label\" colSpan={2}>\n                <h4>BILL TO:</h4>\n              </th>\n              <td className=\"bill-to-name\" colSpan={2}>\n                {customer_name}\n              </td>\n              {Array.isArray(customer_tax_ids) &&\n                customer_tax_ids.length > 0 &&\n                customer_tax_ids.map((tax, index) => (\n                  <>\n                    <td className='bill-to-tax-id-type' key={index}>{tax.type}</td>\n                    <td className='bill-to-tax-id' key={index}>{tax.value}</td>\n                  </>\n                ))}\n            </tr>\n            <tr className=\"bill-to-address\">\n              <td></td>\n              <td></td>\n              <td colSpan={2}>{address_line_1}</td>\n              <td>{address_line_2}</td>\n            </tr>\n            <tr>\n              <td></td>\n              <td></td>\n              <td className=\"bill-to-city\">{city}</td>\n              <td className=\"bill-to-state\">{state}</td>\n              <td className=\"bill-to-zipcode\">{postal_code}</td>\n            </tr>\n            <tr>\n              <td></td>\n              <td></td>\n              <td className=\"bill-to-phone\">{customer_phone}</td>\n              <td></td>\n              <td></td>\n            </tr>\n            <tr>\n              <td></td>\n              <td></td>\n              <td className=\"bill-to-email\" colSpan={2}>\n                {customer_email}\n              </td>\n              <td></td>\n            </tr>\n            <tr className=\"bill-to-due\">\n              <th className=\"bill-to-due-date-label\" colSpan={2}>\n                <h4>DUE DATE</h4>\n              </th>\n              <td className=\"bill-to-due-date\" colSpan={2}>\n                {dueDate ? dueDate : 'N/A'}\n              </td>\n              <th className=\"bill-to-total-due-label\">\n                <h4>TOTAL DUE</h4>\n              </th>\n              <td className=\"bill-to-total-due\">\n                <h4>\n                  {amount_due\n                    ? new Intl.NumberFormat('us', {\n                        style: 'currency',\n                        currency: 'USD',\n                      }).format(amountDue)\n                    : 'N/A'}\n                </h4>\n              </td>\n            </tr>\n            <tr className=\"invoice-labels\">\n              <th>\n                <h4 className=\"number-label\">NO.</h4>\n              </th>\n              <th colSpan={4}>\n                <h4 className=\"description-label\">DESCRIPTION</h4>\n              </th>\n              <th>\n                <h4 className=\"total-label\">TOTAL</h4>\n              </th>\n            </tr>\n          </thead>\n\n          <tbody>\n            {items &&\n              items.length > 0 &&\n              items.map((item) => (\n                <tr id=\"quote_option\">\n                  <td className=\"feature-id\">{item.price.product}</td>\n                  <td className=\"feature-name\" id=\"feature_name\" colSpan={4}>\n                    {item.description}\n                  </td>\n                  <td className=\"feature-cost  table-number\" id=\"feature_cost\">\n                    <h4>\n                      {new Intl.NumberFormat('us', {\n                        style: 'currency',\n                        currency: 'USD',\n                      }).format(item.amount / 100)}\n                    </h4>\n                  </td>\n                </tr>\n              ))}\n          </tbody>\n\n          <tfoot>\n            <tr>\n              <td></td>\n              <td></td>\n              <td></td>\n              <td></td>\n              <th>\n                <h4 className=\"subtotal-label\">SUBTOTAL</h4>\n              </th>\n              <td>\n                <h4 className=\"subtotal table-number\">\n                  {new Intl.NumberFormat('us', {\n                    style: 'currency',\n                    currency: 'USD',\n                  }).format(subTotal)}\n                </h4>\n              </td>\n            </tr>\n            <tr>\n              <td></td>\n              <td></td>\n              <td></td>\n              <td></td>\n              <th>\n                <h4 className=\"tax-label\">TAX</h4>\n              </th>\n              <td>\n                <h4 className=\"tax table-number\">\n                  {new Intl.NumberFormat('us', {\n                    style: 'currency',\n                    currency: 'USD',\n                  }).format(Tax)}\n                </h4>\n              </td>\n            </tr>\n            <tr>\n              <td></td>\n              <td></td>\n              <td></td>\n              <td></td>\n              <th>\n                <h4 className=\"grand-total-label\">GRAND TOTAL</h4>\n              </th>\n              <th>\n                <h4 className=\"grand-total table-number\">\n                  {new Intl.NumberFormat('us', {\n                    style: 'currency',\n                    currency: 'USD',\n                  }).format(grandTotal)}\n                </h4>\n              </th>\n            </tr>\n          </tfoot>\n        </table>\n      </div>\n\n      <button onClick={handleClick}>\n        {status === 'paid' ? <h3>RECEIPT</h3> : <h3>SCHEDULE</h3>}\n      </button>\n    </>\n  );\n}\n\nexport default InvoiceComponent;\n"],"names":["useNavigate","useParams","useEffect","useSelector","useDispatch","getClient","getStripeCustomer","getQuote","getStripeInvoice","getInvoice","finalizeInvoice","getPaymentIntent","InvoiceComponent","id","user_email","stripe_customer_id","state","client","loading","error","status","quote_id","customer_name","customer_tax_ids","address_line_1","address_line_2","city","postal_code","customer_phone","customer_email","stripe_invoice_id","event_id","due_date","amount_due","subtotal","tax","payment_intent_id","items","invoice","client_secret","payment","dueDate","Date","toLocaleString","amountDue","subTotal","Tax","grandTotal","dispatch","navigate","handleClick","then","console","log","length","createElement","className","Fragment","colSpan","Array","isArray","map","index","key","type","value","Intl","NumberFormat","style","currency","format","item","price","product","description","amount","onClick"],"sourceRoot":""}