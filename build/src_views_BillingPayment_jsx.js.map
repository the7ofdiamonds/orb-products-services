{"version":3,"file":"src_views_BillingPayment_jsx.js","mappings":"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","sources":["webpack://orb-services/./src/error/ErrorComponent.jsx","webpack://orb-services/./src/loading/LoadingComponent.jsx","webpack://orb-services/./src/utils/DisplayStatus.js","webpack://orb-services/./src/views/BillingPayment.jsx","webpack://orb-services/./src/views/components/StatusBar.jsx","webpack://orb-services/./src/views/payment/Navigation.jsx"],"sourcesContent":["function ErrorComponent(props) {\n  const { error } = props;\n\n  return (\n    <main className='error'>\n      <div className=\"status-bar card error\">\n        <span>{error}</span>\n      </div>\n    </main>\n  );\n}\n\nexport default ErrorComponent;\n","function LoadingComponent() {\n  return <div>Loading...</div>;\n}\n\nexport default LoadingComponent;","export const displayStatus = (status) => {\n\n  if (status === \"requires_payment_method\") {\n    return 'Choose a payment method'\n  }\n\n  if (status === 'succeeded') {\n    return 'Your transaction was successful. Thank you. ';\n  }\n\n  if (status === 'processing') {\n    return `This transaction is currently processing you may revisit this page at a later time for an update and a confirmation email will be sent.`;\n  }\n\n  if (\n    status === 'requires_confirmation' ||\n    status === 'requires_action' ||\n    status === 'requires_capture'\n  ) {\n  }\n\n  if (status === 'canceled') {\n    return 'This transaction has been canceled';\n  }\n\n  return status;\n};\n\nexport const displayStatusType = (status) => {\n  if (status === 'succeeded') {\n    return 'success';\n  }\n\n  if (\n    status === 'processing' ||\n    status === 'requires_confirmation' ||\n    status === 'requires_action' ||\n    status === 'requires_capture'\n  ) {\n    return 'caution';\n  }\n\n  if (status === 'canceled') {\n    return 'error';\n  }\n\n  return status;\n};\n","import { useEffect, useState } from 'react';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport PaymentNavigationComponent from './payment/Navigation.jsx';\n\nimport { getInvoice, getStripeInvoice } from '../controllers/invoiceSlice.js';\nimport { getPaymentIntent } from '../controllers/paymentSlice.js';\nimport { getPaymentMethod, getReceipt } from '../controllers/receiptSlice.js';\nimport { displayStatus, displayStatusType } from '../utils/DisplayStatus.js';\n\nimport LoadingComponent from '../loading/LoadingComponent';\nimport ErrorComponent from '../error/ErrorComponent.jsx';\nimport StatusBar from '../views/components/StatusBar';\n\nfunction PaymentComponent() {\n  const { id } = useParams();\n\n  const [messageType, setMessageType] = useState('');\n  const [message, setMessage] = useState('Choose a payment method');\n\n  const { stripe_invoice_id } = useSelector((state) => state.invoice);\n  const { loading, paymentError, status, payment_method_id, payment_intent } =\n    useSelector((state) => state.payment);\n  const { receipt_id } = useSelector((state) => state.receipt);\n\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    dispatch(getInvoice(id));\n  }, [dispatch, id]);\n\n  useEffect(() => {\n    if (payment_intent) {\n      dispatch(getPaymentIntent());\n    }\n  }, [dispatch, payment_intent]);\n\n  useEffect(() => {\n    if (status) {\n      setMessage(displayStatus(status));\n      setMessageType(displayStatusType(status));\n    }\n  }, [status]);\n\n  useEffect(() => {\n    if (payment_method_id) {\n      dispatch(getPaymentMethod());\n    }\n  }, [dispatch, payment_method_id]);\n\n  useEffect(() => {\n    if (stripe_invoice_id) {\n      dispatch(getStripeInvoice(stripe_invoice_id));\n    }\n  }, [dispatch, stripe_invoice_id]);\n\n  useEffect(() => {\n    if (receipt_id) {\n      dispatch(getReceipt(receipt_id));\n    }\n  }, [dispatch, receipt_id]);\n\n  if (receipt_id) {\n    window.location.href = `/billing/receipt/${receipt_id}`;\n  }\n\n  if (paymentError) {\n    return <ErrorComponent error={paymentError} />;\n  }\n\n  if (loading) {\n    return <LoadingComponent />;\n  }\n\n  return (\n    <>\n      <PaymentNavigationComponent />\n\n      <StatusBar message={message} messageType={messageType} />\n\n      {receipt_id && status == 'succeeded' && (\n        <button onClick={handleClick}>\n          <h3>RECEIPT</h3>\n        </button>\n      )}\n    </>\n  );\n}\n\nexport default PaymentComponent;\n","function StatusBar(props) {\n  const { message, messageType } = props;\n\n  return (\n    <>\n      {message && (\n        <div className={`status-bar card ${messageType}`}>\n          <span>{message}</span>\n        </div>\n      )}\n    </>\n  );\n}\n\nexport default StatusBar;\n","import { NavLink } from 'react-router-dom';\nimport {\n  useNavigate,\n  useParams,\n} from 'react-router-dom';\n\nfunction PaymentNavigationComponent() {\n  const { id } = useParams();\n\n  return (\n    <>\n      <h2 className=\"title\">PAYMENT</h2>\n      \n      <div className=\"payment-options\">\n        <NavLink to={`/billing/payment/mobile/${id}`}>\n          <button className=\"mobile-btn\" id=\"mobile-btn\">\n            <h3>MOBILE</h3>\n          </button>\n        </NavLink>\n\n        <NavLink to={`/billing/payment/card/${id}`}>\n          <button className=\"debit-credit-btn\" id=\"debit-credit-btn\">\n            <h3>CARD</h3>\n          </button>\n        </NavLink>\n      </div>\n    </>\n  );\n}\n\nexport default PaymentNavigationComponent;\n"],"names":["ErrorComponent","props","error","createElement","className","LoadingComponent","displayStatus","status","displayStatusType","useEffect","useState","useNavigate","useParams","useDispatch","useSelector","PaymentNavigationComponent","getInvoice","getStripeInvoice","getPaymentIntent","getPaymentMethod","getReceipt","StatusBar","PaymentComponent","id","messageType","setMessageType","message","setMessage","stripe_invoice_id","state","invoice","loading","paymentError","payment_method_id","payment_intent","payment","receipt_id","receipt","dispatch","navigate","window","location","href","Fragment","onClick","handleClick","NavLink","to"],"sourceRoot":""}