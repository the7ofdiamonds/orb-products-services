{"version":3,"file":"src_views_payment_Card_jsx.js","mappings":"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","sources":["webpack://orb-services/./src/utils/DisplayStatus.js","webpack://orb-services/./src/views/payment/Card.jsx","webpack://orb-services/./src/views/payment/Navigation.jsx"],"sourcesContent":["export const displayStatus = (status) => {\n\n  if (status === \"requires_payment_method\") {\n    return 'Choose a payment method'\n  }\n\n  if (status === 'succeeded') {\n    return 'Your transaction was successful. Thank you. ';\n  }\n\n  if (status === 'processing') {\n    return `This transaction is currently processing you may revisit this page at a later time for an update and a confirmation email will be sent.`;\n  }\n\n  if (\n    status === 'requires_confirmation' ||\n    status === 'requires_action' ||\n    status === 'requires_capture'\n  ) {\n  }\n\n  if (status === 'canceled') {\n    return 'This transaction has been canceled';\n  }\n\n  return status;\n};\n\nexport const displayStatusType = (status) => {\n  if (status === 'succeeded') {\n    return 'success';\n  }\n\n  if (\n    status === 'processing' ||\n    status === 'requires_confirmation' ||\n    status === 'requires_action' ||\n    status === 'requires_capture'\n  ) {\n    return 'caution';\n  }\n\n  if (status === 'canceled') {\n    return 'error';\n  }\n\n  return status;\n};\n","import { useEffect, useState } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport PaymentNavigationComponent from './Navigation';\n\nimport { getClient } from '../../controllers/clientSlice';\nimport {\n  getInvoice,\n  getStripeInvoice,\n  updateInvoiceStatus,\n} from '../../controllers/invoiceSlice';\nimport { getPaymentIntent } from '../../controllers/paymentSlice';\nimport {\n  postReceipt,\n  getPaymentMethod,\n  updatePaymentMethod,\n} from '../../controllers/receiptSlice';\n\nimport { displayStatus, displayStatusType } from '../../utils/DisplayStatus';\n\n// Stripe\nimport { CardElement, useStripe, useElements } from '@stripe/react-stripe-js';\n\nconst CardPaymentComponent = () => {\n  const { id } = useParams();\n\n  const { user_email, first_name, last_name, stripe_customer_id } = useSelector((state) => state.client);\n  const { stripe_invoice_id, payment_intent_id, status, amount_paid, remaining_balance } =\n    useSelector((state) => state.invoice);\n  const { loading, error, client_secret } = useSelector(\n    (state) => state.payment\n  );\n  const { receipt_id, payment_method, brand, last4 } = useSelector(\n    (state) => state.receipt\n  );\n\n  const [messageType, setMessageType] = useState('');\n  const [message, setMessage] = useState('Choose a payment method');\n\n  // Setup so card displays input\n  const [cardNumber, setCardNumber] = useState('');\n  const [validThruMonth, setValidThruMonth] = useState('');\n  const [validThruYear, setValidThruYear] = useState('');\n  const [CVC, setCVC] = useState('');\n\n  const [paymentMethodID, setPaymentMethodID] = useState('');\n\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n\n  const stripe = useStripe();\n  const elements = useElements();\n\n  useEffect(() => {\n    if (user_email) {\n      dispatch(getClient(user_email));\n    }\n  }, [user_email, dispatch]);\n\n  useEffect(() => {\n    if (stripe_customer_id) {\n      dispatch(getInvoice(id, stripe_customer_id));\n    }\n  }, [dispatch, id, stripe_customer_id]);\n\n  useEffect(() => {\n    if (stripe_invoice_id) {\n      dispatch(getStripeInvoice());\n    }\n  }, [dispatch, stripe_invoice_id]);\n\n  useEffect(() => {\n    if (payment_intent_id) {\n      dispatch(getPaymentIntent(payment_intent_id));\n    }\n  }, [dispatch, payment_intent_id]);\n\n  useEffect(() => {\n    if (status) {\n      dispatch(updateInvoiceStatus());\n    }\n  }, [dispatch, status]);\n\n  useEffect(() => {\n    if (status) {\n      setMessage(displayStatus(status));\n      setMessageType(displayStatusType(status));\n    }\n  }, [status]);\n\n  useEffect(() => {\n    if (receipt_id) {\n      navigate(`/services/receipt/${receipt_id}`);\n    }\n  }, [receipt_id, navigate]);\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n    if (!stripe || !elements) {\n      return;\n    }\n\n    const result = await stripe.confirmCardPayment(client_secret, {\n      payment_method: {\n        card: elements.getElement(CardElement),\n      },\n    });\n\n    if (result.error) {\n      setMessage(result.error.message);\n      setMessageType('error');\n    }\n\n    if (result.paymentIntent) {\n      let status = result.paymentIntent.status;\n\n      setMessage(displayStatus(status));\n      setMessageType(displayStatusType(status));\n\n      dispatch(getPaymentMethod(result.paymentIntent.payment_method));\n    }\n  };\n\n  useEffect(() => {\n    if (brand !== '' && last4 !== '') {\n      const paymentMethodCard = `${brand} - ${last4}`;\n      dispatch(updatePaymentMethod(paymentMethodCard));\n    }\n  }, [dispatch, brand, last4]);\n\n  useEffect(() => {\n    if (payment_method) {\n      dispatch(getStripeInvoice());\n    }\n  }, [dispatch, payment_method]);\n\n  useEffect(() => {\n    if (status === 'paid') {\n      dispatch(postReceipt());\n    }\n  }, [dispatch, status]);\n\n  if (error) {\n    return <div>Error: {error}</div>;\n  }\n\n  if (loading) {\n    return <div>Loading...</div>;\n  }\n\n  return (\n    <>\n      <PaymentNavigationComponent />\n      <div className=\"debit-credit-card card\">\n        <div className=\"front\">\n          n{' '}\n          <div className=\"image\">\n            <img src=\"\" alt=\"\" />\n            <img src=\"\" alt=\"\" />\n          </div>\n          <div className=\"card-number-box\">\n            {cardNumber ? cardNumber : '#### #### #### ####'}\n          </div>\n          <div className=\"flexbox\">\n            <div className=\"box\">\n              <div className=\"card-holder-name\">\n                {first_name} {last_name}\n              </div>\n            </div>\n\n            <div className=\"box\">\n              <span>VALID THRU</span>\n              <div className=\"expiration\">\n                <span className=\"exp-month\">Month</span> /\n                <span className=\"exp-year\">Year</span>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"back\">\n          <div className=\"box\">\n            <span>cvv</span>\n            <div className=\"cvv-box\"></div>\n            <img src=\"\" alt=\"\" />\n          </div>\n        </div>\n      </div>\n\n      <form className=\"stripe-card card\" onSubmit={handleSubmit}>\n        <CardElement />\n      </form>\n\n      {message && (\n        <div className={`status-bar card ${messageType}`}>\n          <span>{message}</span>\n        </div>\n      )}\n\n      <button type=\"submit\" disabled={!stripe} onClick={handleSubmit}>\n        <h3>PAY</h3>\n      </button>\n    </>\n  );\n};\n\nexport default CardPaymentComponent;\n","import { NavLink } from 'react-router-dom';\nimport {\n  useNavigate,\n  useParams,\n} from 'react-router-dom';\n\nfunction PaymentNavigationComponent() {\n  const { id } = useParams();\n\n  return (\n    <>\n      <h2 className=\"title\">PAYMENT</h2>\n      <div className=\"payment-options\">\n        <NavLink to={`/services/payment/${id}/mobile`}>\n          <button className=\"mobile-btn\" id=\"mobile-btn\">\n            <h4>MOBILE</h4>\n          </button>\n        </NavLink>\n\n        <NavLink to={`/services/payment/${id}/card`}>\n          <button className=\"debit-credit-btn\" id=\"debit-credit-btn\">\n            <h4>CARD</h4>\n          </button>\n        </NavLink>\n      </div>\n    </>\n  );\n}\n\nexport default PaymentNavigationComponent;\n"],"names":["displayStatus","status","displayStatusType","useEffect","useState","useParams","useNavigate","useSelector","useDispatch","PaymentNavigationComponent","getClient","getInvoice","getStripeInvoice","updateInvoiceStatus","getPaymentIntent","postReceipt","getPaymentMethod","updatePaymentMethod","CardElement","useStripe","useElements","CardPaymentComponent","id","user_email","first_name","last_name","stripe_customer_id","state","client","stripe_invoice_id","payment_intent_id","amount_paid","remaining_balance","invoice","loading","error","client_secret","payment","receipt_id","payment_method","brand","last4","receipt","messageType","setMessageType","message","setMessage","cardNumber","setCardNumber","validThruMonth","setValidThruMonth","validThruYear","setValidThruYear","CVC","setCVC","paymentMethodID","setPaymentMethodID","dispatch","navigate","stripe","elements","handleSubmit","event","preventDefault","result","confirmCardPayment","card","getElement","paymentIntent","paymentMethodCard","createElement","Fragment","className","src","alt","onSubmit","type","disabled","onClick","NavLink","to"],"sourceRoot":""}