{"version":3,"file":"src_views_Dashboard_jsx.js","mappings":"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","sources":["webpack://orb-services/./src/views/Dashboard.jsx","webpack://orb-services/./src/views/dashboard/UserSchedule.jsx"],"sourcesContent":["import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport UserScheduleComponent from './dashboard/UserSchedule';\n\nfunction DashboardComponent() {\n  return (\n    <>\n      <UserScheduleComponent />\n      \n    </>\n  );\n}\n\nexport default DashboardComponent;\n","import React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { getClient } from '../../controllers/clientSlice';\nimport { getClientEvents } from '../../controllers/scheduleSlice';\n\nfunction UserScheduleComponent() {\n  const dispatch = useDispatch();\n\n  const { user_email, client_id } = useSelector((state) => state.client);\n  const { loading, scheduleError, events } = useSelector(\n    (state) => state.schedule\n  );\n\n  useEffect(() => {\n    if (user_email) {\n      dispatch(getClient());\n    }\n  }, [user_email, dispatch]);\n\n  useEffect(() => {\n    if (client_id) {\n      dispatch(getClientEvents());\n    }\n  }, [client_id, dispatch]);\n\n  if (scheduleError) {\n    return (\n      <>\n        <div className=\"status-bar card error\">\n          <span>\n            <h4>{scheduleError}</h4>\n          </span>\n        </div>\n      </>\n    );\n  }\n\n  if (loading) {\n    return <div>Loading...</div>;\n  }\n\n  const now = new Date().getTime();\n  let sortedEvents = [];\n\n  if (Array.isArray(events)) {\n    sortedEvents = events.slice().sort((a, b) => {\n      const timeDiffA = new Date(a.start_date + ' ' + a.start_time) - now;\n      const timeDiffB = new Date(b.start_date + ' ' + b.start_time) - now;\n\n      return timeDiffA - timeDiffB;\n    });\n  }\n\n  return (\n    <>\n      {Array.isArray(sortedEvents) && sortedEvents.length > 0 ? (\n        <div className=\"card schedule\">\n          <table>\n            <thead>\n              <tr>\n                <th>\n                  <h4>Event ID</h4>\n                </th>\n                <th>\n                  <h4>Start Date</h4>\n                </th>\n                <th>\n                  <h4>Start Time</h4>\n                </th>\n              </tr>\n            </thead>\n            <tbody>\n              {sortedEvents.map((event) => (\n                <tr key={event.id}>\n                  <td>{event.id}</td>\n                  <td>{event.start_date}</td>\n                  <td>{event.start_time}</td>\n                </tr>\n              ))}\n            </tbody>\n          </table>\n        </div>\n      ) : (\n        ''\n      )}\n    </>\n  );\n}\n\nexport default UserScheduleComponent;\n"],"names":["React","useEffect","useDispatch","useSelector","UserScheduleComponent","DashboardComponent","createElement","Fragment","useState","getClient","getClientEvents","dispatch","user_email","client_id","state","client","loading","scheduleError","events","schedule","className","now","Date","getTime","sortedEvents","Array","isArray","slice","sort","a","b","timeDiffA","start_date","start_time","timeDiffB","length","map","event","key","id"],"sourceRoot":""}