{"version":3,"file":"src_views_Quote_jsx.js","mappings":"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","sources":["webpack://orb-services/./src/views/Quote.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport { fetchServices } from '../controllers/servicesSlice.js';\nimport { getClient } from '../controllers/clientSlice.js';\nimport {\n  cancelQuote,\n  acceptQuote,\n  getStripeQuote,\n  getQuoteByID,\n} from '../controllers/quoteSlice.js';\nimport { saveInvoice } from '../controllers/invoiceSlice.js';\n\nfunction QuoteComponent() {\n  const { id } = useParams();\n\n  const { services } = useSelector((state) => state.services);\n  const { user_email, stripe_customer_id } = useSelector(\n    (state) => state.client\n  );\n  const {\n    loading,\n    error,\n    stripe_quote_id,\n    status,\n    total,\n    selections,\n    stripe_invoice_id,\n  } = useSelector((state) => state.quote);\n  const { invoice_id } = useSelector((state) => state.invoice);\n\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    if (user_email) {\n      dispatch(getClient());\n    }\n  }, [user_email, dispatch]);\n\n  useEffect(() => {\n    if (stripe_customer_id) {\n      dispatch(fetchServices());\n    }\n  }, [stripe_customer_id, dispatch]);\n\n  useEffect(() => {\n    if (id && stripe_customer_id) {\n      dispatch(getQuoteByID(id));\n    }\n  }, [id, stripe_customer_id, dispatch]);\n\n  const handleCancel = () => {\n    if (stripe_quote_id && status === 'open') {\n      dispatch(cancelQuote());\n    }\n  };\n\n  const handleConfirm = async () => {\n    if (stripe_quote_id && status === 'open') {\n      await dispatch(acceptQuote()).then(() => {\n        return dispatch(getStripeQuote());\n      });\n    }\n  };\n\n  useEffect(() => {\n    if (stripe_invoice_id) {\n      dispatch(saveInvoice());\n    }\n  }, [stripe_invoice_id, dispatch]);\n\n  useEffect(() => {\n    if (status === 'accepted' && stripe_invoice_id && invoice_id)\n      navigate(`/services/invoice/${invoice_id}`);\n  }, [status, stripe_invoice_id, invoice_id]);\n\n  if (status === 'canceled') {\n    return (\n      <main>\n        <div className=\"status-bar card error\">\n          <span className=\"error\">This quote has been canceled.</span>\n        </div>\n      </main>\n    );\n  }\n\n  if (error) {\n    return (\n      <main>\n        <div className=\"status-bar card error\">\n          <span>\n            There is an error loading the available services at this time.{' '}\n          </span>\n        </div>\n      </main>\n    );\n  }\n\n  if (loading) {\n    return <div>Loading...</div>;\n  }\n\n  return (\n    <>\n      <h2 className=\"title\">QUOTE</h2>\n      <div className=\"quote-card card\">\n        <table>\n          <thead>\n            <tr>\n              <th>\n                <h4>Quote</h4>\n              </th>\n            </tr>\n            <tr>\n              <th>\n                <h4 className=\"number-label\">NO.</h4>\n              </th>\n              <th colSpan={4}>\n                <h4 className=\"description-label\">DESCRIPTION</h4>\n              </th>\n              <th>\n                <h4 className=\"total-label\">TOTAL</h4>\n              </th>\n            </tr>\n          </thead>\n          <tbody>\n            {selections &&\n              selections.length > 0 &&\n              selections.map((item) => (\n                <tr id=\"quote_option\">\n                  <td className=\"feature-id\">{item.price_id}</td>\n                  <td className=\"feature-name\" id=\"feature_name\" colSpan={4}>\n                    {item.description}\n                  </td>\n                  <td className=\"feature-cost  table-number\" id=\"feature_cost\">\n                    <h4>\n                      {new Intl.NumberFormat('us', {\n                        style: 'currency',\n                        currency: 'USD',\n                      }).format(item.cost)}\n                    </h4>\n                  </td>\n                </tr>\n              ))}\n          </tbody>\n        </table>\n      </div>\n\n      <div className=\"actions\">\n        <button onClick={handleCancel}>\n          <h3>CANCEL</h3>\n        </button>\n\n        <button onClick={handleConfirm}>\n          <h3>CONFIRM</h3>\n        </button>\n      </div>\n    </>\n  );\n}\n\nexport default QuoteComponent;\n"],"names":["React","useEffect","useState","useNavigate","useParams","useSelector","useDispatch","fetchServices","getClient","cancelQuote","acceptQuote","getStripeQuote","getQuoteByID","saveInvoice","QuoteComponent","id","services","state","user_email","stripe_customer_id","client","loading","error","stripe_quote_id","status","total","selections","stripe_invoice_id","quote","invoice_id","invoice","dispatch","navigate","handleCancel","handleConfirm","then","createElement","className","Fragment","colSpan","length","map","item","price_id","description","Intl","NumberFormat","style","currency","format","cost","onClick"],"sourceRoot":""}