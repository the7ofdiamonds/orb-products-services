{"version":3,"file":"src_views_BillingQuotes_jsx.js","mappings":"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","sources":["webpack://orb-products-services/./src/views/BillingQuotes.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { getClient } from '../controllers/clientSlice';\nimport { getClientQuotes } from '../controllers/quoteSlice';\n\nfunction BillingQuotes() {\n  const dispatch = useDispatch();\n\n  const { user_email, stripe_customer_id } = useSelector(\n    (state) => state.client\n  );\n  const { loading, quoteError, quotes, pdf } = useSelector(\n    (state) => state.quote\n  );\n\n  useEffect(() => {\n    if (user_email) {\n      dispatch(getClient());\n    }\n  }, [user_email, dispatch]);\n\n  useEffect(() => {\n    if (stripe_customer_id) {\n      dispatch(getClientQuotes());\n    }\n  }, [stripe_customer_id, dispatch]);\n\n  if (quoteError) {\n    return (\n      <>\n        <div className=\"status-bar card error\">\n          <span>\n            <h4>{quoteError}</h4>\n          </span>\n        </div>\n      </>\n    );\n  }\n\n  if (loading) {\n    return <div>Loading...</div>;\n  }\n\n  const now = new Date().getTime();\n  let sortedQuotes = [];\n\n  if (Array.isArray(quotes)) {\n    sortedQuotes = quotes.slice().sort((a, b) => {\n      const timeDiffA = Math.abs(a.expires_at - now);\n      const timeDiffB = Math.abs(b.expires_at - now);\n\n      return timeDiffA - timeDiffB;\n    });\n  }\n\n  return (\n    <>\n      {Array.isArray(sortedQuotes) && sortedQuotes.length > 0 ? (\n        <div className=\"card quote\">\n          <table>\n            <thead>\n              <tr>\n                <th>\n                  <h4>Quote ID</h4>\n                </th>\n                <th>\n                  <h4>Status</h4>\n                </th>\n                <th>\n                  <h4>Total</h4>\n                </th>\n                <th>\n                  <h4>Page</h4>\n                </th>\n              </tr>\n            </thead>\n            <tbody>\n              {sortedQuotes.map((quote) => (\n                <>\n                  <tr>\n                    <td>{quote.id}</td>\n                    <td>{quote.status}</td>\n                    <td>\n                      {new Intl.NumberFormat('us', {\n                        style: 'currency',\n                        currency: 'USD',\n                      }).format(quote.amount_total)}\n                    </td>\n                    <td>\n                      {quote.status === 'accepted' ? (\n                        <h5>Accepted</h5>\n                      ) : quote.status === 'canceled' ? (\n                        <h5>Canceled</h5>\n                      ) : (\n                        <a href={`/services/quote/${quote.id}`}>\n                          <h5>Confirm</h5>\n                        </a>\n                      )}\n                    </td>\n                  </tr>\n                </>\n              ))}\n            </tbody>\n          </table>\n        </div>\n      ) : (\n        ''\n      )}\n    </>\n  );\n}\n\nexport default BillingQuotes;\n"],"names":["React","useEffect","useState","useDispatch","useSelector","getClient","getClientQuotes","BillingQuotes","dispatch","user_email","stripe_customer_id","state","client","loading","quoteError","quotes","pdf","quote","createElement","Fragment","className","now","Date","getTime","sortedQuotes","Array","isArray","slice","sort","a","b","timeDiffA","Math","abs","expires_at","timeDiffB","length","map","id","status","Intl","NumberFormat","style","currency","format","amount_total","href"],"sourceRoot":""}