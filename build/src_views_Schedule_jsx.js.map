{"version":3,"file":"src_views_Schedule_jsx.js","mappings":"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","sources":["webpack://orb-services/./src/views/Schedule.jsx"],"sourcesContent":["import { useEffect, useRef, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport { getClient } from '../controllers/clientSlice';\nimport {\n  fetchCalendarEvents,\n  updateDate,\n  updateTime,\n  updateDueDate,\n  updateEvent,\n} from '../controllers/scheduleSlice.js';\nimport { saveInvoice } from '../controllers/invoiceSlice.js';\n\nfunction ScheduleComponent() {\n  const { user_email, client_id, stripe_customer_id } = useSelector(\n    (state) => state.client\n  );\n  const { total } = useSelector((state) => state.quote);\n  const { loading, error, events, start_date, start_time } = useSelector(\n    (state) => state.schedule\n  );\n  const { invoice_id } = useSelector((state) => state.invoice);\n\n  const [availableDates, setAvailableDates] = useState('');\n  const [availableTimes, setAvailableTimes] = useState('');\n  const [selectedDate, setSelectedDate] = useState('');\n  const [selectedTime, setSelectedTime] = useState('');\n\n  const dateSelectRef = useRef(null);\n  const timeSelectRef = useRef(null);\n\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    dispatch(getClient());\n  }, [user_email, dispatch]);\n\n  useEffect(() => {\n    if (client_id && stripe_customer_id) {\n      dispatch(fetchCalendarEvents());\n    }\n  }, [client_id, stripe_customer_id, dispatch]);\n\n  const getEvents = () => {\n    const datesAvail = events.map((event) => {\n      const dateTime = event.start;\n      const date = dateTime.split('T')[0];\n      return new Date(date).toLocaleDateString(undefined, {\n        year: 'numeric',\n        month: 'long',\n        day: 'numeric',\n      });\n    });\n    setAvailableDates(datesAvail);\n    setSelectedDate(datesAvail[0]);\n\n    const selectedIndex = dateSelectRef.current.selectedIndex;\n\n    if (selectedIndex >= 0) {\n      const timesAvail = events.map((event) => {\n        const dateTime = event.start;\n        const time = dateTime.split('T')[1];\n        const start = time.split('-')[0];\n        const endTime = time.split('-')[1];\n        const startHour = parseInt(start, 10);\n        const endHour =\n          parseInt(endTime, 10) < 12\n            ? parseInt(endTime, 10) + 12\n            : parseInt(endTime, 10);\n\n        const hours = [];\n\n        for (let i = startHour; i <= endHour; i++) {\n          hours.push(i);\n        }\n\n        return hours.map((hr) => {\n          return new Date(0, 0, 0, hr, 0, 0, 0).toLocaleTimeString('en-US', {\n            hour12: true,\n            hour: '2-digit',\n            minute: '2-digit',\n          });\n        });\n      });\n\n      setAvailableTimes(timesAvail[selectedIndex]);\n    }\n  };\n\n  useEffect(() => {\n    if (events) {\n      getEvents();\n    }\n  }, [events]);\n\n  useEffect(() => {\n    dateSelectRef.current = document.getElementById('date_select');\n    timeSelectRef.current = document.getElementById('time_select');\n    if (availableDates && availableDates.length > 0) {\n      setSelectedDate(availableDates[0]);\n    }\n  }, [availableDates]);\n\n  const handleDateChange = (event) => {\n    if (dateSelectRef.current) {\n      getEvents();\n      setSelectedDate(event.target.value);\n      dispatch(updateDate(event.target.value));\n      dispatch(updateDueDate());\n    }\n  };\n\n  const handleTimeChange = (event) => {\n    if (timeSelectRef.current) {\n      getEvents();\n      setSelectedTime(event.target.value);\n      dispatch(updateTime(event.target.value));\n      dispatch(updateDueDate());\n    }\n  };\n\n  useEffect(() => {\n    if (start_date && start_time) {\n      dispatch(updateEvent());\n    }\n  }, [start_date, start_time, dispatch]);\n\n  const handleClick = () => {\n    if (stripe_customer_id && total > 0) {\n      dispatch(saveInvoice());\n    }\n  };\n\n  useEffect(() => {\n    if (invoice_id) {\n      navigate(`/services/invoice/${invoice_id}`);\n    }\n  }, [navigate, invoice_id]);\n\n  if (error) {\n    return <div>Error: {error}</div>;\n  }\n\n  if (loading) {\n    return <div>Loading...</div>;\n  }\n\n  return (\n    <>\n      <h2 className=\"title\">SCHEDULE</h2>\n      <div className=\"schedule\" id=\"schedule\">\n        <div className=\"schedule-select\">\n          <div className=\"date-select card\">\n            <label htmlFor=\"date\">Choose a Date</label>\n            <select\n              type=\"text\"\n              name=\"date\"\n              id=\"date_select\"\n              ref={dateSelectRef}\n              onChange={handleDateChange}\n              defaultValue={selectedDate}\n              min={new Date().toISOString().split('T')[0]} // Disable past dates\n            >\n              {availableDates ? (\n                availableDates.map((date, index) => (\n                  <option key={index} value={date}>\n                    {date}\n                  </option>\n                ))\n              ) : (\n                <option disabled>No Available Dates</option> // Show \"No Available Dates\" message\n              )}\n            </select>\n          </div>\n          <div className=\"time-select card\">\n            <label htmlFor=\"time\">Choose a Time</label>\n            <select\n              type=\"time\"\n              name=\"time\"\n              id=\"time_select\"\n              ref={timeSelectRef}\n              defaultValue={selectedTime}\n              onChange={handleTimeChange}>\n              {availableTimes && availableTimes.length > 0 ? (\n                availableTimes.map((time, index) => (\n                  <option key={index} value={time}>\n                    {time}\n                  </option>\n                ))\n              ) : (\n                <option disabled>No Available Times</option>\n              )}\n            </select>\n          </div>\n        </div>\n      </div>\n\n      <button onClick={handleClick}>\n        <h3>CONFIRM</h3>\n      </button>\n    </>\n  );\n}\n\nexport default ScheduleComponent;\n"],"names":["useEffect","useRef","useState","useNavigate","useSelector","useDispatch","getClient","fetchCalendarEvents","updateDate","updateTime","updateDueDate","updateEvent","saveInvoice","ScheduleComponent","user_email","client_id","stripe_customer_id","state","client","total","quote","loading","error","events","start_date","start_time","schedule","invoice_id","invoice","availableDates","setAvailableDates","availableTimes","setAvailableTimes","selectedDate","setSelectedDate","selectedTime","setSelectedTime","dateSelectRef","timeSelectRef","dispatch","navigate","getEvents","datesAvail","map","event","dateTime","start","date","split","Date","toLocaleDateString","undefined","year","month","day","selectedIndex","current","timesAvail","time","endTime","startHour","parseInt","endHour","hours","i","push","hr","toLocaleTimeString","hour12","hour","minute","document","getElementById","length","handleDateChange","target","value","handleTimeChange","handleClick","createElement","Fragment","className","id","htmlFor","type","name","ref","onChange","defaultValue","min","toISOString","index","key","disabled","onClick"],"sourceRoot":""}