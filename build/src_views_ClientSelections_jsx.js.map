{"version":3,"file":"src_views_ClientSelections_jsx.js","mappings":"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","sources":["webpack://orb-products-services/./src/loading/LoadingComponent.jsx","webpack://orb-products-services/./src/views/ClientSelections.jsx","webpack://orb-products-services/./src/views/components/StatusBar.jsx"],"sourcesContent":["function LoadingComponent() {\n  return (\n    <div className=\"loading\">\n      <h1>Loading......</h1>\n    </div>\n  );\n}\n\nexport default LoadingComponent;\n","import React, { useEffect, useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport { fetchServices } from '../controllers/servicesSlice.js';\nimport { getClient } from '../controllers/clientSlice.js';\nimport {\n  addSelections,\n  calculateSelections,\n  createQuote,\n  finalizeQuote,\n  getClientQuotes,\n  getQuote,\n  updateStripeQuote,\n} from '../controllers/quoteSlice.js';\n\nimport LoadingComponent from '../loading/LoadingComponent.jsx';\nimport StatusBar from './components/StatusBar.jsx';\n\nfunction SelectionsComponent() {\n  const dispatch = useDispatch();\n\n  const [messageType, setMessageType] = useState('info');\n  const [message, setMessage] = useState(\n    'Check the boxes next to the services you would like performed.'\n  );\n  const [checkedItems, setCheckedItems] = useState([]);\n\n  const { servicesLoading, services } = useSelector((state) => state.services);\n  const { user_email, stripe_customer_id } = useSelector(\n    (state) => state.client\n  );\n  const {\n    loading,\n    quotes,\n    quoteError,\n    quote_id,\n    status,\n    selections,\n    total,\n    stripe_quote_id,\n  } = useSelector((state) => state.quote);\n\n  useEffect(() => {\n    if (user_email) {\n      dispatch(getClient()).then((response) => {\n        if (response.error !== undefined) {\n          console.error(response.error.message);\n          setMessageType('error');\n          setMessage(response.error.message);\n        }\n      });\n    }\n  }, [user_email, dispatch]);\n\n  useEffect(() => {\n    if (stripe_customer_id) {\n      dispatch(getClientQuotes()).then((response) => {\n        if (response.error !== undefined) {\n          console.error(response.error.message);\n          setMessageType('error');\n          setMessage(response.error.message);\n        }\n      });\n    }\n  }, [stripe_customer_id, dispatch]);\n\n  useEffect(() => {\n    if (quotes) {\n      const filteredQuotes = [];\n\n      quotes.forEach((quote) => {\n        const timestampNow = Math.floor(Date.now() / 1000);\n        const timestamp = parseInt(quote.expires_at);\n        const createdAt = new Date(quote.created_at).getTime();\n        const status = quote.status;\n\n        if (timestampNow < timestamp) {\n          if (\n            status === 'draft' ||\n            status === 'open' ||\n            status === 'accepted'\n          ) {\n            filteredQuotes.push(createdAt);\n          }\n        }\n      });\n\n      if (filteredQuotes.length > 0) {\n        const earliestDate = Math.min(...filteredQuotes);\n\n        quotes.forEach((quote) => {\n          if (new Date(quote.created_at).getTime() === earliestDate) {\n            dispatch(getQuote(quote.stripe_quote_id)).then((response) => {\n              if (response.error !== undefined) {\n                console.error(response.error.message);\n                setMessageType('error');\n                setMessage(response.error.message);\n              }\n            });\n          }\n        });\n      }\n    }\n  }, [quotes, dispatch]);\n\n  useEffect(() => {\n    if (stripe_quote_id) {\n      dispatch(getQuote()).then((response) => {\n        if (response.error !== undefined) {\n          console.error(response.error.message);\n          setMessageType('error');\n          setMessage(response.error.message);\n        }\n      });\n    }\n  }, [stripe_quote_id, dispatch]);\n\n  useEffect(() => {\n    if (stripe_customer_id) {\n      dispatch(fetchServices()).then((response) => {\n        if (response.error !== undefined) {\n          console.error(response.error.message);\n          setMessageType('error');\n          setMessage(response.error.message);\n        }\n      });\n    }\n  }, [stripe_customer_id, dispatch]);\n\n  useEffect(() => {\n    dispatch(addSelections(checkedItems));\n  }, [dispatch, checkedItems]);\n\n  useEffect(() => {\n    dispatch(calculateSelections(services.cost));\n  }, [dispatch, services.cost, checkedItems]);\n\n  const handleCheckboxChange = (event, id, price_id, description, cost) => {\n    const isChecked = event.target.checked;\n\n    setCheckedItems((prevItems) => {\n      if (isChecked) {\n        const newItem = { id, price_id, description, cost };\n        return [...prevItems, newItem];\n      } else {\n        return prevItems.filter((item) => item.id !== id);\n      }\n    });\n  };\n\n  const handleClick = () => {\n    if (selections.length === 0) {\n      setMessageType('error');\n    } else if (\n      (stripe_quote_id && status === 'canceled' && selections.length > 0) ||\n      (stripe_quote_id === '' &&\n        status === '' &&\n        selections.length > 0 &&\n        stripe_customer_id)\n    ) {\n      dispatch(createQuote(selections)).then((response) => {\n        if (response.error !== undefined) {\n          console.error(response.error.message);\n          setMessageType('error');\n          setMessage(response.error.message);\n        }\n      });\n    } else if (stripe_quote_id && status === 'draft' && selections.length > 0) {\n      dispatch(updateStripeQuote()).then((response) => {\n        if (response.error !== undefined) {\n          console.error(response.error.message);\n          setMessageType('error');\n          setMessage(response.error.message);\n        }\n      });\n    } else if (stripe_quote_id && status === 'draft') {\n      dispatch(finalizeQuote()).then((response) => {\n        if (response.error !== undefined) {\n          console.error(response.error.message);\n          setMessageType('error');\n          setMessage(response.error.message);\n        }\n      });\n    } else if (quote_id && (status === 'open' || status === 'accepted')) {\n      window.location.href = `/billing/quote/${quote_id}`;\n    }\n  };\n\n  if (servicesLoading) {\n    return <LoadingComponent />;\n  }\n\n  return (\n    <>\n      <section className=\"selections\">\n        <h2>SELECTIONS</h2>\n\n        <div className=\"quote-card card\">\n          <table>\n            <thead>\n              <tr>\n                <th colSpan={2}>\n                  <h4 className=\"description-label\">DESCRIPTION</h4>\n                </th>\n                <th>\n                  <h4 className=\"cost-label\">COST</h4>\n                </th>\n              </tr>\n            </thead>\n            <tbody>\n              {services && services.length ? (\n                <React.Fragment>\n                  {services.map((service) => {\n                    const { id, price_id, description, cost } = service;\n\n                    return (\n                      <tr key={price_id} id=\"quote_option\">\n                        <td>\n                          <input\n                            className=\"input selection feature-selection\"\n                            type=\"checkbox\"\n                            name=\"quote[checkbox][]\"\n                            checked={checkedItems.some(\n                              (item) => item.price_id === price_id\n                            )}\n                            onChange={(event) =>\n                              handleCheckboxChange(\n                                event,\n                                id,\n                                price_id,\n                                description,\n                                cost\n                              )\n                            }\n                          />\n                        </td>\n                        <td className=\"feature-description\">{description}</td>\n                        <td\n                          className=\"feature-cost table-number\"\n                          id=\"feature_cost\">\n                          {new Intl.NumberFormat('us', {\n                            style: 'currency',\n                            currency: 'USD',\n                          }).format(cost)}\n                        </td>\n                      </tr>\n                    );\n                  })}\n                </React.Fragment>\n              ) : (\n                <tr>\n                  <td colSpan={3}>\n                    <h3>No features to show yet</h3>\n                  </td>\n                </tr>\n              )}\n            </tbody>\n            <tfoot>\n              <tr>\n                <th colSpan={2}>\n                  <h4 className=\"subtotal-label\">TOTAL</h4>\n                </th>\n                <th>\n                  <h4 className=\"subtotal\">\n                    {new Intl.NumberFormat('us', {\n                      style: 'currency',\n                      currency: 'USD',\n                    }).format(total)}\n                  </h4>\n                </th>\n              </tr>\n            </tfoot>\n          </table>\n        </div>\n\n        <StatusBar message={message} messageType={messageType} />\n\n        {quote_id && (status === 'open' || status === 'accepted') ? (\n          <button onClick={handleClick}>\n            <h3>QUOTE</h3>\n          </button>\n        ) : (\n          ''\n        )}\n      </section>\n    </>\n  );\n}\n\nexport default SelectionsComponent;\n","function StatusBarComponent(props) {\n  const { message, messageType } = props;\n\n  return (\n    <>\n      {message && (\n        <div className={`status-bar card ${messageType}`}>\n          <span>{message}</span>\n        </div>\n      )}\n    </>\n  );\n}\n\nexport default StatusBarComponent;\n"],"names":["LoadingComponent","createElement","className","React","useEffect","useState","useSelector","useDispatch","fetchServices","getClient","addSelections","calculateSelections","createQuote","finalizeQuote","getClientQuotes","getQuote","updateStripeQuote","StatusBar","SelectionsComponent","dispatch","messageType","setMessageType","message","setMessage","checkedItems","setCheckedItems","servicesLoading","services","state","user_email","stripe_customer_id","client","loading","quotes","quoteError","quote_id","status","selections","total","stripe_quote_id","quote","then","response","error","undefined","console","filteredQuotes","forEach","timestampNow","Math","floor","Date","now","timestamp","parseInt","expires_at","createdAt","created_at","getTime","push","length","earliestDate","min","cost","handleCheckboxChange","event","id","price_id","description","isChecked","target","checked","prevItems","newItem","filter","item","handleClick","window","location","href","Fragment","colSpan","map","service","key","type","name","some","onChange","Intl","NumberFormat","style","currency","format","onClick","StatusBarComponent","props"],"sourceRoot":""}