{"version":3,"file":"src_views_Schedule_jsx.js","mappings":"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","sources":["webpack://orb-services/./src/views/Schedule.jsx"],"sourcesContent":["import { useEffect, useRef, useState } from 'react';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport { getClient } from '../controllers/clientSlice';\nimport {\n  fetchCalendarEvents,\n  updateDate,\n  updateTime,\n  updateDueDate,\n  updateSummary,\n  updateEvent,\n  sendInvites,\n  updateDescription,\n  updateAttendees,\n  getOfficeHours,\n} from '../controllers/scheduleSlice.js';\nimport { getAvailableServices } from '../controllers/servicesSlice';\nimport { getClientQuotes } from '../controllers/quoteSlice';\nimport { getClientInvoices } from '../controllers/invoiceSlice';\nimport { getClientReceipts } from '../controllers/receiptSlice';\n\nimport { formatOfficeHours, datesAvail, timesAvail } from '../utils/Schedule';\n\nfunction ScheduleComponent() {\n  const { id } = useParams();\n\n  const { user_email, client_id, stripe_customer_id } = useSelector(\n    (state) => state.client\n  );\n  const {\n    loading,\n    scheduleError,\n    events,\n    start_date,\n    start_time,\n    event_id,\n    event_date_time,\n    summary,\n    description,\n    attendees,\n    office_hours,\n  } = useSelector((state) => state.schedule);\n  const { availableServices } = useSelector((state) => state.services);\n  const { quotes } = useSelector((state) => state.quote);\n  const { invoices } = useSelector((state) => state.invoice);\n  const { receipts } = useSelector((state) => state.receipt);\n\n  const [officeHours, setOfficeHours] = useState('');\n  const [availableDates, setAvailableDates] = useState('');\n  const [availableTimes, setAvailableTimes] = useState('');\n  const [selectedDate, setSelectedDate] = useState('');\n  const [selectedTime, setSelectedTime] = useState('');\n  const [selectedSummary, setSelectedSummary] = useState('');\n  const [selectedDescription, setSelectedDescription] = useState('');\n  const [selectedAttendees, setSelectedAttendees] = useState([user_email]);\n  const [showAdditionalAttendee, setShowAdditionalAttendee] = useState(false);\n  const [additionalAttendeeEmail, setAdditionalAttendeeEmail] = useState('');\n  const [messageType, setMessageType] = useState('info');\n  const [message, setMessage] = useState('Choose a date');\n\n  const dateSelectRef = useRef(null);\n  const timeSelectRef = useRef(null);\n  const summarySelectRef = useRef(null);\n  const descriptionSelectRef = useRef(null);\n  const attendeesSelectRef = useRef(null);\n\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n\n  // Office Hours\n  useEffect(() => {\n    dispatch(getOfficeHours());\n  }, [dispatch]);\n\n  useEffect(() => {\n    if (office_hours) {\n      setOfficeHours(formatOfficeHours(office_hours));\n    }\n  }, [office_hours]);\n\n  // Client info\n  useEffect(() => {\n    dispatch(getClient());\n  }, [dispatch]);\n\n  // Events\n  useEffect(() => {\n    if (client_id && stripe_customer_id) {\n      dispatch(fetchCalendarEvents());\n    }\n  }, [client_id, stripe_customer_id, dispatch]);\n\n  useEffect(() => {\n    if (scheduleError) {\n      setMessageType('error');\n      setMessage(scheduleError);\n    }\n  }, [messageType, message]);\n\n  useEffect(() => {\n    if (events && Array.isArray(events)) {\n      setAvailableDates(datesAvail(events));\n    }\n  }, [events]);\n\n  useEffect(() => {\n    dateSelectRef.current = document.getElementById('date_select');\n    timeSelectRef.current = document.getElementById('time_select');\n    summarySelectRef.current = document.getElementById('summary_select');\n    descriptionSelectRef.current =\n      document.getElementById('description_select');\n    attendeesSelectRef.current = document.getElementById('description_select');\n  }, []);\n\n  useEffect(() => {\n    if (availableDates && availableDates.length > 0) {\n      setSelectedDate(availableDates[0]);\n    }\n  }, [availableDates]);\n\n  useEffect(() => {\n    if (\n      selectedDate &&\n      dateSelectRef.current &&\n      events.length > 0 &&\n      Array.isArray(events)\n    ) {\n      const selectedIndex = dateSelectRef.current.selectedIndex;\n      setAvailableTimes(timesAvail(events, selectedIndex));\n    }\n  }, [selectedDate]);\n\n  useEffect(() => {\n    if (availableTimes) {\n      setSelectedTime(availableTimes[0]);\n    }\n  }, [availableTimes]);\n\n  const handleDateChange = (event) => {\n    if (dateSelectRef.current) {\n      setSelectedDate(event.target.value);\n      dispatch(updateDate(event.target.value));\n      dispatch(updateDueDate());\n      setMessage('Choose a time');\n      timesAvail();\n    }\n  };\n\n  const handleTimeChange = (event) => {\n    if (timeSelectRef.current) {\n      setSelectedTime(event.target.value);\n      dispatch(updateTime(event.target.value));\n      dispatch(updateDueDate());\n      setMessage('Choose a topic');\n    }\n  };\n\n  useEffect(() => {\n    if (start_date && start_time) {\n      dispatch(updateEvent());\n    }\n  }, [start_date, start_time, dispatch]);\n\n  // Summary\n  useEffect(() => {\n    if (selectedTime) {\n      dispatch(getAvailableServices());\n    }\n  }, [selectedTime, dispatch]);\n\n  useEffect(() => {\n    if (availableServices && availableServices.length > 0) {\n      setSelectedSummary(availableServices[0].description);\n      dispatch(updateSummary(availableServices[0].description));\n    }\n  }, [availableServices, dispatch]);\n\n  const handleSummaryChange = (event) => {\n    if (summarySelectRef.current) {\n      setSelectedSummary(event.target.value);\n      dispatch(updateSummary(event.target.value));\n    }\n  };\n\n  // Description\n  useEffect(() => {\n    if (summary && stripe_customer_id) {\n      dispatch(getClientReceipts())\n        .then(() => {\n          dispatch(getClientInvoices());\n        })\n        .then(() => {\n          dispatch(getClientQuotes());\n        });\n    }\n  }, [summary, stripe_customer_id, dispatch]);\n\n  useEffect(() => {\n    if (\n      summary &&\n      descriptionSelectRef.current &&\n      descriptionSelectRef.current.options.length > 0\n    ) {\n      setSelectedDescription(descriptionSelectRef.current.options[0].value);\n      dispatch(\n        updateDescription(descriptionSelectRef.current.options[0].value)\n      );\n    }\n  }, [summary, dispatch]);\n\n  const handleDescriptionChange = (event) => {\n    if (descriptionSelectRef.current) {\n      setSelectedDescription(event.target.value);\n      dispatch(updateDescription(event.target.value));\n    }\n  };\n\n  // Attendees\n  useEffect(() => {\n    if (summary !== '' && user_email) {\n      dispatch(updateAttendees(selectedAttendees));\n    }\n  }, [summary, dispatch]);\n\n  const handleAttendeeChange = () => {\n    if (additionalAttendeeEmail) {\n      const updatedAttendees = [user_email, additionalAttendeeEmail];\n      setAdditionalAttendeeEmail('');\n      dispatch(updateAttendees(updatedAttendees));\n    }\n  };\n\n  const handleAddAttendee = () => {\n    setShowAdditionalAttendee((prevState) => !prevState);\n  };\n\n  const handleRemoveAttendee = (index) => {\n    const updatedAttendees = selectedAttendees.filter((_, i) => i !== index);\n    setSelectedAttendees(updatedAttendees);\n    dispatch(updateAttendees(updatedAttendees));\n  };\n\n  const handleClick = () => {\n    if (event_date_time) {\n      dispatch(sendInvites());\n    }\n  };\n\n  useEffect(() => {\n    if (event_id) {\n      window.location.href = '/dashboard';\n    }\n  }, [event_id]);\n\n  if (scheduleError) {\n    return (\n      <div className=\"status-bar card error\">\n        <span>{scheduleError}</span>\n      </div>\n    );\n  }\n\n  if (loading) {\n    return <div>Loading...</div>;\n  }\n\n  return (\n    <>\n      {officeHours && officeHours.length > 0 ? (\n        <div className=\"office-hours-card card\">\n          <table>\n            <thead>\n              <tr>\n                <th>SUN</th>\n                <th>MON</th>\n                <th>TUE</th>\n                <th>WED</th>\n                <th>THU</th>\n                <th>FRI</th>\n                <th>SAT</th>\n              </tr>\n            </thead>\n            <tbody>\n              <tr>\n                {officeHours.map((hours) => (\n                  <>\n                    <td key={hours.day}>\n                      {hours.start && hours.end\n                        ? `${hours.start} - ${hours.end}`\n                        : 'CLOSED'}\n                    </td>\n                  </>\n                ))}\n              </tr>\n            </tbody>\n          </table>\n        </div>\n      ) : (\n        ''\n      )}\n\n      <div className=\"schedule\" id=\"schedule\">\n        <div className=\"schedule-select\">\n          {availableDates && availableDates.length > 0 ? (\n            <div className=\"date-select card\">\n              <label htmlFor=\"date\">Choose a Date</label>\n              <select\n                type=\"text\"\n                name=\"date\"\n                id=\"date_select\"\n                ref={dateSelectRef}\n                onChange={handleDateChange}\n                defaultValue={selectedDate}\n                min={new Date().toISOString().split('T')[0]}>\n                {availableDates.map((date, index) => (\n                  <option key={index} value={date}>\n                    {date}\n                  </option>\n                ))}\n              </select>\n            </div>\n          ) : (\n            ''\n          )}\n\n          {availableTimes && availableTimes.length > 0 ? (\n            <div className=\"time-select card\">\n              <label htmlFor=\"time\">Choose a Time</label>\n              <select\n                type=\"time\"\n                name=\"time\"\n                id=\"time_select\"\n                ref={timeSelectRef}\n                defaultValue={selectedTime}\n                onChange={handleTimeChange}>\n                {availableTimes.map((time, index) => (\n                  <option key={index} value={time}>\n                    {time}\n                  </option>\n                ))}\n              </select>\n            </div>\n          ) : (\n            ''\n          )}\n        </div>\n      </div>\n\n      {availableServices && availableServices.length > 0 ? (\n        <div className=\"summary-select card\">\n          <label htmlFor=\"summary\">About</label>\n          <select\n            type=\"text\"\n            name=\"summary\"\n            id=\"summary_select\"\n            ref={summarySelectRef}\n            onChange={handleSummaryChange}\n            defaultValue={selectedSummary}>\n            {availableServices.map((service, index) => (\n              <option key={index} value={service.description}>\n                {service.description}\n              </option>\n            ))}\n          </select>\n        </div>\n      ) : (\n        ''\n      )}\n\n      {(receipts && receipts.length > 0) ||\n      (invoices && invoices.length > 0) ||\n      (quotes && quotes.length > 0) ? (\n        <div className=\"description-select card\">\n          <label htmlFor=\"description\">Details</label>\n          <select\n            type=\"text\"\n            name=\"description\"\n            id=\"description_select\"\n            ref={descriptionSelectRef}\n            onChange={handleDescriptionChange}\n            defaultValue={selectedDescription}>\n            {receipts.map((receipt, index) => (\n              <option key={index} value={`Receipt#${receipt.id}`}>\n                Receipt#{receipt.id}\n              </option>\n            ))}\n            {invoices.map((invoice, index) => (\n              <option key={index} value={`Invoice#${invoice.id}`}>\n                Invoice#{invoice.id}\n              </option>\n            ))}\n            {quotes.map((quote, index) => (\n              <option key={index} value={`Quote#${quote.id}`}>\n                Quote#{quote.id}\n              </option>\n            ))}\n          </select>\n        </div>\n      ) : (\n        ''\n      )}\n\n      {attendees && attendees.length > 0 ? (\n        <div className=\"attendees-select card\">\n          <label htmlFor=\"attendees\">Attendees</label>\n          {attendees.map((attendee, index) => (\n            <div className=\"attendee\">\n              <h4 key={index}>{attendee}</h4>\n              <button\n                className=\"remove-attendee\"\n                onClick={handleRemoveAttendee}>\n                <h4>-</h4>\n              </button>\n              <button onClick={handleAddAttendee}>\n                <h4>+</h4>\n              </button>\n            </div>\n          ))}\n        </div>\n      ) : (\n        ''\n      )}\n\n      <div\n        className={`additional-attendee card ${\n          showAdditionalAttendee ? 'view' : ''\n        }`}\n        id=\"additional_attendee\">\n        <label htmlFor=\"attendees\">Additional Attendee</label>\n        <div className=\"attendee\">\n          <input\n            type=\"email\"\n            value={additionalAttendeeEmail}\n            onChange={(event) => setAdditionalAttendeeEmail(event.target.value)}\n          />\n          <button className=\"add-attendee\" onClick={handleAttendeeChange}>\n            <h4>+</h4>\n          </button>\n        </div>\n      </div>\n\n      {user_email && message ? (\n        <div className={`status-bar card ${messageType}`}>\n          <span>{message}</span>\n        </div>\n      ) : (\n        ''\n      )}\n\n      {user_email ? (\n        <button onClick={handleClick}>\n          <h3>SCHEDULE</h3>\n        </button>\n      ) : (\n        ''\n      )}\n    </>\n  );\n}\n\nexport default ScheduleComponent;\n"],"names":["useEffect","useRef","useState","useNavigate","useParams","useSelector","useDispatch","getClient","fetchCalendarEvents","updateDate","updateTime","updateDueDate","updateSummary","updateEvent","sendInvites","updateDescription","updateAttendees","getOfficeHours","getAvailableServices","getClientQuotes","getClientInvoices","getClientReceipts","formatOfficeHours","datesAvail","timesAvail","ScheduleComponent","id","user_email","client_id","stripe_customer_id","state","client","loading","scheduleError","events","start_date","start_time","event_id","event_date_time","summary","description","attendees","office_hours","schedule","availableServices","services","quotes","quote","invoices","invoice","receipts","receipt","officeHours","setOfficeHours","availableDates","setAvailableDates","availableTimes","setAvailableTimes","selectedDate","setSelectedDate","selectedTime","setSelectedTime","selectedSummary","setSelectedSummary","selectedDescription","setSelectedDescription","selectedAttendees","setSelectedAttendees","showAdditionalAttendee","setShowAdditionalAttendee","additionalAttendeeEmail","setAdditionalAttendeeEmail","messageType","setMessageType","message","setMessage","dateSelectRef","timeSelectRef","summarySelectRef","descriptionSelectRef","attendeesSelectRef","dispatch","navigate","Array","isArray","current","document","getElementById","length","selectedIndex","handleDateChange","event","target","value","handleTimeChange","handleSummaryChange","then","options","handleDescriptionChange","handleAttendeeChange","updatedAttendees","handleAddAttendee","prevState","handleRemoveAttendee","index","filter","_","i","handleClick","window","location","href","createElement","className","Fragment","map","hours","key","day","start","end","htmlFor","type","name","ref","onChange","defaultValue","min","Date","toISOString","split","date","time","service","attendee","onClick"],"sourceRoot":""}