{"version":3,"file":"src_views_payment_Payment_jsx.js","mappings":";;;;;;;;;;;;;;AAAO,MAAMA,aAAa,GAAIC,MAAM,IAAK;EAEvC,IAAIA,MAAM,KAAK,yBAAyB,EAAE;IACxC,OAAO,yBAAyB;EAClC;EAEA,IAAIA,MAAM,KAAK,WAAW,EAAE;IAC1B,OAAO,8CAA8C;EACvD;EAEA,IAAIA,MAAM,KAAK,YAAY,EAAE;IAC3B,OAAQ,yIAAwI;EAClJ;EAEA,IACEA,MAAM,KAAK,uBAAuB,IAClCA,MAAM,KAAK,iBAAiB,IAC5BA,MAAM,KAAK,kBAAkB,EAC7B,CACF;EAEA,IAAIA,MAAM,KAAK,UAAU,EAAE;IACzB,OAAO,oCAAoC;EAC7C;EAEA,OAAOA,MAAM;AACf,CAAC;AAEM,MAAMC,iBAAiB,GAAID,MAAM,IAAK;EAC3C,IAAIA,MAAM,KAAK,WAAW,EAAE;IAC1B,OAAO,SAAS;EAClB;EAEA,IACEA,MAAM,KAAK,YAAY,IACvBA,MAAM,KAAK,uBAAuB,IAClCA,MAAM,KAAK,iBAAiB,IAC5BA,MAAM,KAAK,kBAAkB,EAC7B;IACA,OAAO,SAAS;EAClB;EAEA,IAAIA,MAAM,KAAK,UAAU,EAAE;IACzB,OAAO,OAAO;EAChB;EAEA,OAAOA,MAAM;AACf,CAAC;;;;;;;;;;;;;;;;;;;AC/C0C;AAIjB;AAE1B,SAASK,0BAA0BA,CAAA,EAAG;EACpC,MAAM;IAAEC;EAAG,CAAC,GAAGF,2DAAS,CAAC,CAAC;EAE1B,OACEG,iEAAA,CAAAC,wDAAA,QACED,iEAAA;IAAIE,SAAS,EAAC;EAAO,GAAC,SAAW,CAAC,EAClCF,iEAAA;IAAKE,SAAS,EAAC;EAAiB,GAC9BF,iEAAA,CAACL,qDAAO;IAACQ,EAAE,EAAG,qBAAoBJ,EAAG;EAAS,GAC5CC,iEAAA;IAAQE,SAAS,EAAC,YAAY;IAACH,EAAE,EAAC;EAAY,GAC5CC,iEAAA,aAAI,QAAU,CACR,CACD,CAAC,EAEVA,iEAAA,CAACL,qDAAO;IAACQ,EAAE,EAAG,qBAAoBJ,EAAG;EAAO,GAC1CC,iEAAA;IAAQE,SAAS,EAAC,kBAAkB;IAACH,EAAE,EAAC;EAAkB,GACxDC,iEAAA,aAAI,MAAQ,CACN,CACD,CACN,CACL,CAAC;AAEP;AAEA,iEAAeF,0BAA0B;;;;;;;;;;;;;;;;;;;;;;;;;;AC7BG;AACc;AACH;AAEG;AAEuB;AACZ;AACY;AACD;AAEhF,SAASe,gBAAgBA,CAAA,EAAG;EAC1B,MAAM;IAAEd;EAAG,CAAC,GAAGF,2DAAS,CAAC,CAAC;EAE1B,MAAM;IAAEiB;EAAkB,CAAC,GAAGP,wDAAW,CACtCQ,KAAK,IAAKA,KAAK,CAACC,OACnB,CAAC;EACD,MAAM;IAAEC,OAAO;IAAEC,KAAK;IAAEzB,MAAM;IAAE0B,iBAAiB;IAAEC;EAAe,CAAC,GAAGb,wDAAW,CAC9EQ,KAAK,IAAKA,KAAK,CAACM,OACnB,CAAC;EACD,MAAM;IAAEC;EAAW,CAAC,GAAGf,wDAAW,CAAEQ,KAAK,IAAKA,KAAK,CAACQ,OAAO,CAAC;EAE5D,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGpB,+CAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACqB,OAAO,EAAEC,UAAU,CAAC,GAAGtB,+CAAQ,CAAC,yBAAyB,CAAC;EAEjE,MAAMuB,QAAQ,GAAGtB,wDAAW,CAAC,CAAC;EAC9B,MAAMuB,QAAQ,GAAGjC,6DAAW,CAAC,CAAC;EAE9BQ,gDAAS,CAAC,MAAM;IACdwB,QAAQ,CAACpB,wEAAU,CAACT,EAAE,CAAC,CAAC;EAC1B,CAAC,EAAE,CAAC6B,QAAQ,EAAE7B,EAAE,CAAC,CAAC;EAElBK,gDAAS,CAAC,MAAM;IACd,IAAIgB,cAAc,EAAE;MAClBQ,QAAQ,CAAClB,8EAAgB,CAAC,CAAC,CAAC;IAC9B;EACF,CAAC,EAAE,CAACkB,QAAQ,EAAER,cAAc,CAAC,CAAC;EAE9BhB,gDAAS,CAAC,MAAM;IACd,IAAIX,MAAM,EAAE;MACVkC,UAAU,CAACnC,sEAAa,CAACC,MAAM,CAAC,CAAC;MACjCgC,cAAc,CAAC/B,0EAAiB,CAACD,MAAM,CAAC,CAAC;IAC3C;EACF,CAAC,EAAE,CAACA,MAAM,CAAC,CAAC;EAEZW,gDAAS,CAAC,MAAM;IACd,IAAIe,iBAAiB,EAAE;MACrBS,QAAQ,CAACjB,8EAAgB,CAAC,CAAC,CAAC;IAC9B;EACF,CAAC,EAAE,CAACiB,QAAQ,EAAET,iBAAiB,CAAC,CAAC;EAEjCf,gDAAS,CAAC,MAAM;IACd,IAAIU,iBAAiB,EAAE;MACrBc,QAAQ,CAACnB,8EAAgB,CAACK,iBAAiB,CAAC,CAAC;IAC/C;EACF,CAAC,EAAE,CAACc,QAAQ,EAAEd,iBAAiB,CAAC,CAAC;EAEjCV,gDAAS,CAAC,MAAM;IACd,IAAIkB,UAAU,EAAE;MACdM,QAAQ,CAAChB,wEAAU,CAACU,UAAU,CAAC,CAAC;IAClC;EACF,CAAC,EAAE,CAACM,QAAQ,EAAEN,UAAU,CAAC,CAAC;EAE1B,IAAIA,UAAU,EAAE;IACdO,QAAQ,CAAE,qBAAoBP,UAAW,EAAC,CAAC;EAC7C;EAEA,IAAIJ,KAAK,EAAE;IACT,OAAOlB,iEAAA,eAAM,SAAO,EAACkB,KAAY,CAAC;EACpC;EAEA,IAAID,OAAO,EAAE;IACX,OAAOjB,iEAAA,eAAM,YAAgB,CAAC;EAChC;EAEA,OACEA,iEAAA,CAAAC,wDAAA,QACED,iEAAA,CAACF,uDAA0B,MAAE,CAAC,EAC7B4B,OAAO,KAAK,EAAE,IACb1B,iEAAA;IAAKE,SAAS,EAAC;EAAiB,GAC9BF,iEAAA;IAAME,SAAS,EAAG,GAAEsB,WAAY;EAAE,GAAEE,OAAc,CAC/C,CACN,EAEAJ,UAAU,IAAI7B,MAAM,IAAI,WAAW,IAClCO,iEAAA;IAAQ8B,OAAO,EAAEC;EAAY,GAC3B/B,iEAAA,aAAI,SAAW,CACT,CAEV,CAAC;AAEP;AAEA,iEAAea,gBAAgB","sources":["webpack://orb-services/./src/utils/DisplayStatus.js","webpack://orb-services/./src/views/payment/Navigation.jsx","webpack://orb-services/./src/views/payment/Payment.jsx"],"sourcesContent":["export const displayStatus = (status) => {\n\n  if (status === \"requires_payment_method\") {\n    return 'Choose a payment method'\n  }\n\n  if (status === 'succeeded') {\n    return 'Your transaction was successful. Thank you. ';\n  }\n\n  if (status === 'processing') {\n    return `This transaction is currently processing you may revisit this page at a later time for an update and a confirmation email will be sent.`;\n  }\n\n  if (\n    status === 'requires_confirmation' ||\n    status === 'requires_action' ||\n    status === 'requires_capture'\n  ) {\n  }\n\n  if (status === 'canceled') {\n    return 'This transaction has been canceled';\n  }\n\n  return status;\n};\n\nexport const displayStatusType = (status) => {\n  if (status === 'succeeded') {\n    return 'success';\n  }\n\n  if (\n    status === 'processing' ||\n    status === 'requires_confirmation' ||\n    status === 'requires_action' ||\n    status === 'requires_capture'\n  ) {\n    return 'caution';\n  }\n\n  if (status === 'canceled') {\n    return 'error';\n  }\n\n  return status;\n};\n","import { NavLink } from 'react-router-dom';\nimport {\n  useNavigate,\n  useParams,\n} from 'react-router-dom';\n\nfunction PaymentNavigationComponent() {\n  const { id } = useParams();\n\n  return (\n    <>\n      <h2 className=\"title\">PAYMENT</h2>\n      <div className=\"payment-options\">\n        <NavLink to={`/services/payment/${id}/mobile`}>\n          <button className=\"mobile-btn\" id=\"mobile-btn\">\n            <h4>MOBILE</h4>\n          </button>\n        </NavLink>\n\n        <NavLink to={`/services/payment/${id}/card`}>\n          <button className=\"debit-credit-btn\" id=\"debit-credit-btn\">\n            <h4>CARD</h4>\n          </button>\n        </NavLink>\n      </div>\n    </>\n  );\n}\n\nexport default PaymentNavigationComponent;\n","import { useEffect, useState } from 'react';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport PaymentNavigationComponent from './Navigation.jsx';\n\nimport { getInvoice, getStripeInvoice } from '../../controllers/invoiceSlice.js';\nimport { getPaymentIntent } from '../../controllers/paymentSlice.js';\nimport { getPaymentMethod, getReceipt } from '../../controllers/receiptSlice.js';\nimport { displayStatus, displayStatusType } from '../../utils/DisplayStatus.js';\n\nfunction PaymentComponent() {\n  const { id } = useParams();\n\n  const { stripe_invoice_id } = useSelector(\n    (state) => state.invoice\n  );\n  const { loading, error, status, payment_method_id, payment_intent } = useSelector(\n    (state) => state.payment\n  );\n  const { receipt_id } = useSelector((state) => state.receipt);\n\n  const [messageType, setMessageType] = useState('');\n  const [message, setMessage] = useState('Choose a payment method');\n\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    dispatch(getInvoice(id));\n  }, [dispatch, id]);\n\n  useEffect(() => {\n    if (payment_intent) {\n      dispatch(getPaymentIntent());\n    }\n  }, [dispatch, payment_intent]);\n\n  useEffect(() => {\n    if (status) {\n      setMessage(displayStatus(status));\n      setMessageType(displayStatusType(status));\n    }\n  }, [status]);\n\n  useEffect(() => {\n    if (payment_method_id) {\n      dispatch(getPaymentMethod());\n    }\n  }, [dispatch, payment_method_id]);\n\n  useEffect(() => {\n    if (stripe_invoice_id) {\n      dispatch(getStripeInvoice(stripe_invoice_id));\n    }\n  }, [dispatch, stripe_invoice_id]);\n\n  useEffect(() => {\n    if (receipt_id) {\n      dispatch(getReceipt(receipt_id));\n    }\n  }, [dispatch, receipt_id]);\n\n  if (receipt_id) {\n    navigate(`/services/receipt/${receipt_id}`);\n  }\n\n  if (error) {\n    return <main>Error: {error}</main>;\n  }\n\n  if (loading) {\n    return <main>Loading...</main>;\n  }\n\n  return (\n    <>\n      <PaymentNavigationComponent />\n      {message !== '' && (\n        <div className=\"status-bar card\">\n          <span className={`${messageType}`}>{message}</span>\n        </div>\n      )}\n\n      {receipt_id && status == 'succeeded' && (\n        <button onClick={handleClick}>\n          <h3>RECEIPT</h3>\n        </button>\n      )}\n    </>\n  );\n}\n\nexport default PaymentComponent;\n"],"names":["displayStatus","status","displayStatusType","NavLink","useNavigate","useParams","PaymentNavigationComponent","id","createElement","Fragment","className","to","useEffect","useState","useDispatch","useSelector","getInvoice","getStripeInvoice","getPaymentIntent","getPaymentMethod","getReceipt","PaymentComponent","stripe_invoice_id","state","invoice","loading","error","payment_method_id","payment_intent","payment","receipt_id","receipt","messageType","setMessageType","message","setMessage","dispatch","navigate","onClick","handleClick"],"sourceRoot":""}