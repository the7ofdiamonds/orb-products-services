{"version":3,"file":"src_views_Receipt_jsx.js","mappings":"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","sources":["webpack://orb-services/./src/utils/PhoneNumberFormatter.js","webpack://orb-services/./src/views/Receipt.jsx"],"sourcesContent":["const formatPhoneNumber = (phoneNumber) => {\n  if (typeof phoneNumber !== 'string' || phoneNumber.trim() === '') {\n    return ''; // Return an empty string for invalid phone numbers\n  }\n\n  // Remove all non-digit characters from the phone number\n  const cleaned = phoneNumber.replace(/\\D/g, '');\n\n  // Apply the desired phone number format\n  const regex = /^(\\d{1})(\\d{3})(\\d{3})(\\d{4})$/;\n  const formatted = cleaned.replace(regex, '+$1 ($2) $3-$4');\n\n  return formatted;\n};\n\nexport default formatPhoneNumber;\n","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport { getClient } from '../controllers/clientSlice.js';\nimport { getStripeCustomer } from '../controllers/customerSlice.js';\nimport { getStripeInvoice } from '../controllers/invoiceSlice.js';\nimport { getPaymentIntent } from '../controllers/paymentSlice.js';\nimport { getPaymentMethod, getReceipt } from '../controllers/receiptSlice.js';\n\nimport formatPhoneNumber from '../utils/PhoneNumberFormatter.js';\nimport { getEvent } from '../controllers/scheduleSlice.js';\n\nfunction ReceiptComponent() {\n  const { id } = useParams();\n  const dispatch = useDispatch();\n\n  const { user_email, stripe_customer_id } = useSelector(\n    (state) => state.client\n  );\n  const {\n    company_name,\n    address_line_1,\n    address_line_2,\n    city,\n    state,\n    zipcode,\n    phone,\n  } = useSelector((state) => state.customer);\n  const {\n    status,\n    selections,\n    subtotal,\n    tax,\n    amount_due,\n    amount_paid,\n    amount_remaining,\n    payment_date,\n    payment_intent_id,\n  } = useSelector((state) => state.invoice);\n  const { start_date, start_time } = useSelector((state) => state.schedule);\n  const { payment_method_id } = useSelector((state) => state.payment);\n  const {\n    loading,\n    error,\n    invoice_id,\n    stripe_invoice_id,\n    payment_method,\n    first_name,\n    last_name,\n  } = useSelector((state) => state.receipt);\n\n  const [messageType, setMessageType] = useState('');\n  const [message, setMessage] = useState('');\n\n  const timestamp = payment_date * 1000;\n  const paymentDate = new Date(timestamp);\n  const formattedPhone = formatPhoneNumber(phone);\n  const Subtotal = subtotal / 100;\n  const Tax = tax / 100;\n  const amountDue = amount_due / 100;\n  const amountPaid = amount_paid / 100;\n  const Balance = amount_remaining / 100;\n\n  useEffect(() => {\n    if (user_email) {\n      dispatch(getClient());\n    }\n  }, [dispatch, user_email]);\n\n  useEffect(() => {\n    if (stripe_customer_id) {\n      dispatch(getStripeCustomer());\n    }\n  }, [dispatch, stripe_customer_id]);\n\n  useEffect(() => {\n    if (stripe_customer_id) {\n      dispatch(getReceipt(id));\n    }\n  }, [dispatch, id, stripe_customer_id]);\n\n  useEffect(() => {\n    if (!payment_method && payment_method_id) {\n      dispatch(getPaymentMethod(payment_method_id));\n    }\n  }, [dispatch, payment_method_id]);\n\n  useEffect(() => {\n    if (invoice_id) {\n      dispatch(getEvent());\n    }\n  }, [invoice_id, dispatch]);\n\n  useEffect(() => {\n    if (start_date && start_time) {\n      setMessageType('info');\n      setMessage(\n        `Make sure to confirm your appointment for ${start_date} @ ${start_time}.`\n      );\n    }\n  }, [start_date, start_time]);\n\n  useEffect(() => {\n    if (stripe_invoice_id) {\n      dispatch(getStripeInvoice(stripe_invoice_id));\n    }\n  }, [dispatch, stripe_invoice_id]);\n\n  useEffect(() => {\n    if (payment_intent_id) {\n      dispatch(getPaymentIntent(payment_intent_id));\n    }\n  }, [dispatch, payment_intent_id]);\n\n  const handleClick = () => {\n    window.location = '/dashboard';\n  };\n\n  if (error) {\n    return (\n      <div className=\"status-bar card error\">\n        <span>\n          You have either entered the wrong Receipt ID, or you are not the\n          client to whom this receipt belongs.\n        </span>\n      </div>\n    );\n  }\n\n  if (loading) {\n    return <div>Loading...</div>;\n  }\n\n  return (\n    <>\n      <h2 className=\"title\">RECEIPT</h2>\n      <div className=\"receipt-card card\">\n        <div className=\"thead\">\n          <div className=\"tr receipt-number\">\n            <div className=\"th\">\n              <h4>RECEIPT NUMBER</h4>\n            </div>\n            <div className=\"td\">\n              <h5>{id}</h5>\n            </div>\n          </div>\n          <div className=\"tr payment-date\">\n            <div className=\"th\">\n              <h4>PAYMENT DATE</h4>\n            </div>\n            <div className=\"td\">\n              <h5>{paymentDate.toLocaleString()}</h5>\n            </div>\n          </div>\n          <div className=\"tr payment-method\">\n            <div className=\"th\">\n              <h4>PAYMENT TYPE</h4>\n            </div>\n            <div className=\"td\">\n              <h5 className=\"payment-method\">\n                {payment_method ? payment_method : 'No Payment Method Provided'}\n              </h5>\n            </div>\n          </div>\n          <div className=\"tr client-details\">\n            <div className=\"th\">\n              <h4>PAID BY</h4>\n            </div>\n            <div className=\"td\">\n              <h5>\n                {first_name} {last_name} O/B/O {company_name}\n              </h5>\n            </div>\n            <div className=\"tr address-line-1\">\n              <div className=\"td\">\n                <h5>{address_line_1}</h5>\n              </div>\n              <div className=\"td\">\n                <h5>{address_line_2}</h5>\n              </div>\n            </div>\n            <div className=\"tr address-line-2\">\n              <div className=\"td\">\n                <h5>{`${city},`}</h5>\n              </div>\n              <div className=\"td\">\n                <h5>{state}</h5>\n              </div>\n              <div className=\"td\">\n                <h5>{zipcode}</h5>\n              </div>\n            </div>\n            <div className=\"tr phone\">\n              <div className=\"td\">\n                <a href={`tel:${phone}`}>\n                  <h5>{formattedPhone}</h5>\n                </a>\n              </div>\n            </div>\n            <div className=\"tr email\">\n              <div className=\"td\">\n                <h5>{user_email}</h5>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <table>\n          <thead>\n            <th>\n              <h4>NO.</h4>\n            </th>\n            <th>\n              <h4>DESCRIPTION</h4>\n            </th>\n            <th>\n              <h4>TOTAL</h4>\n            </th>\n          </thead>\n          <tbody>\n            {selections &&\n              selections.length > 0 &&\n              selections.map((selection) => (\n                <tr>\n                  <td>\n                    <h5>{selection.id}</h5>\n                  </td>\n                  <td>\n                    <h5>{selection.description}</h5>\n                  </td>\n                  <td className=\"selections-cost\">\n                    <h5>\n                      {new Intl.NumberFormat('us', {\n                        style: 'currency',\n                        currency: 'USD',\n                      }).format(selection.cost)}\n                    </h5>\n                  </td>\n                </tr>\n              ))}\n          </tbody>\n        </table>\n\n        <div className=\"tfoot\">\n          <div className=\"tr subtotal\">\n            <div className=\"th subtotal-label\">\n              <h4>SUBTOTAL</h4>\n            </div>\n            <div className=\"td subtotal-number\">\n              <h5>\n                {new Intl.NumberFormat('us', {\n                  style: 'currency',\n                  currency: 'USD',\n                }).format(Subtotal)}\n              </h5>\n            </div>\n          </div>\n          <div className=\"tr tax\">\n            <div className=\"th tax-label\">\n              <h4>TAX</h4>\n            </div>\n            <div className=\"td tax-number\">\n              <h5>\n                {new Intl.NumberFormat('us', {\n                  style: 'currency',\n                  currency: 'USD',\n                }).format(Tax)}\n              </h5>\n            </div>\n          </div>\n          <div className=\"tr grand-total\">\n            <div className=\"th grand-total-label\">\n              <h4>GRAND TOTAL</h4>\n            </div>\n            <div className=\"td grand-total-number\">\n              <h5>\n                {new Intl.NumberFormat('us', {\n                  style: 'currency',\n                  currency: 'USD',\n                }).format(amountDue)}\n              </h5>\n            </div>\n          </div>\n          <div className=\"tr amount-paid\">\n            <div className=\"th amount-paid-label\">\n              <h4>AMOUNT PAID</h4>\n            </div>\n            <div className=\"td amount-paid-number\">\n              <h5>\n                {new Intl.NumberFormat('us', {\n                  style: 'currency',\n                  currency: 'USD',\n                }).format(amountPaid)}\n              </h5>\n            </div>\n          </div>\n          <div className=\"tr balance\">\n            <div className=\"th balance-label\">\n              <h4>BALANCE</h4>\n            </div>\n            <div className=\"td balance-number\">\n              <h5>\n                {new Intl.NumberFormat('us', {\n                  style: 'currency',\n                  currency: 'USD',\n                }).format(Balance)}\n              </h5>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {message && (\n        <div className={`status-bar card ${messageType}`}>\n          <span>{message}</span>\n        </div>\n      )}\n\n      <button id=\"quote_button\" onClick={handleClick}>\n        <h3>DASHBOARD</h3>\n      </button>\n    </>\n  );\n}\n\nexport default ReceiptComponent;\n"],"names":["formatPhoneNumber","phoneNumber","trim","cleaned","replace","regex","formatted","useState","useEffect","useParams","useSelector","useDispatch","getClient","getStripeCustomer","getStripeInvoice","getPaymentIntent","getPaymentMethod","getReceipt","getEvent","ReceiptComponent","id","dispatch","user_email","stripe_customer_id","state","client","company_name","address_line_1","address_line_2","city","zipcode","phone","customer","status","selections","subtotal","tax","amount_due","amount_paid","amount_remaining","payment_date","payment_intent_id","invoice","start_date","start_time","schedule","payment_method_id","payment","loading","error","invoice_id","stripe_invoice_id","payment_method","first_name","last_name","receipt","messageType","setMessageType","message","setMessage","timestamp","paymentDate","Date","formattedPhone","Subtotal","Tax","amountDue","amountPaid","Balance","handleClick","window","location","createElement","className","Fragment","toLocaleString","href","length","map","selection","description","Intl","NumberFormat","style","currency","format","cost","onClick"],"sourceRoot":""}