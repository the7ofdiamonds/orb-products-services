{"version":3,"file":"src_views_Billing_jsx.js","mappings":"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","sources":["webpack://orb-products-services/./src/views/Billing.jsx","webpack://orb-products-services/./src/views/dashboard/UserInvoice.jsx","webpack://orb-products-services/./src/views/dashboard/UserQuote.jsx","webpack://orb-products-services/./src/views/dashboard/UserReceipt.jsx"],"sourcesContent":["import React from 'react';\n\nimport UserReceiptComponent from './dashboard/UserReceipt';\nimport UserInvoiceComponent from './dashboard/UserInvoice';\nimport UserQuoteComponent from './dashboard/UserQuote';\n\nfunction Billing() {\n  return (\n    <>\n      <h2 className=\"title\">billing</h2>\n\n      <UserReceiptComponent />\n      <UserInvoiceComponent />\n      <UserQuoteComponent />\n    </>\n  );\n}\n\nexport default Billing;\n","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { getClient } from '../../controllers/clientSlice';\nimport {\n  getClientInvoices,\n  deleteInvoice,\n} from '../../controllers/invoiceSlice';\n\nfunction UserInvoiceComponent() {\n  const dispatch = useDispatch();\n\n  const { user_email, stripe_customer_id } = useSelector(\n    (state) => state.client\n  );\n  const { invoiceLoading, invoiceError, invoices } = useSelector(\n    (state) => state.invoice\n  );\n\n  useEffect(() => {\n    if (user_email) {\n      dispatch(getClient());\n    }\n  }, [user_email, dispatch]);\n\n  useEffect(() => {\n    if (stripe_customer_id) {\n      dispatch(getClientInvoices());\n    }\n  }, [stripe_customer_id, dispatch]);\n\n  if (invoiceLoading) {\n    return <div>Loading...</div>;\n  }\n\n  if (invoiceError) {\n    return (\n      <>\n        <div className=\"status-bar card error\">\n          <span>\n            <h4>{invoiceError}</h4>\n          </span>\n        </div>\n      </>\n    );\n  }\n\n  const now = new Date().getTime();\n  let sortedInvoices = [];\n\n  if (Array.isArray(invoices)) {\n    sortedInvoices = invoices.slice().sort((a, b) => {\n      const timeDiffA = Math.abs(a.due_date - now);\n      const timeDiffB = Math.abs(b.due_date - now);\n\n      return timeDiffA - timeDiffB;\n    });\n  }\n\n  return (\n    <>\n      {Array.isArray(sortedInvoices) && sortedInvoices.length > 0 ? (\n        <div className=\"card invoice\">\n          <table>\n            <thead>\n              <tr>\n                <th>\n                  <h4>Invoice ID</h4>\n                </th>\n                <th>\n                  <h4>Status</h4>\n                </th>\n                <th>\n                  <h4>Balance</h4>\n                </th>\n                <th>\n                  <h4>Due Date</h4>\n                </th>\n                <th>\n                  <h4>Quote ID</h4>\n                </th>\n                <th>\n                  <h4>Page</h4>\n                </th>\n              </tr>\n            </thead>\n            <tbody>\n              {sortedInvoices.map((invoice) => (\n                <>\n                  <tr>\n                    <td>{invoice.id}</td>\n                    <td>{invoice.status}</td>\n                    <td>\n                      {/* add currency column using var invoice.currency */}\n                      {new Intl.NumberFormat('us', {\n                        style: 'currency',\n                        currency: 'USD',\n                      }).format(invoice.amount_remaining)}\n                    </td>\n                    <td>\n                      {invoice.due_date\n                        ? new Date(invoice.due_date * 1000).toLocaleString()\n                        : ''}\n                    </td>\n                    <td>{invoice.quote_id}</td>\n                    <td>\n                      {invoice.status === 'deleted' ? (\n                        <h5>Deleted</h5>\n                      ) : invoice.status === 'paid' ? (\n                        <a href={`/services/invoice/${invoice.id}`}>\n                          <button>\n                            <h5>View</h5>\n                          </button>\n                        </a>\n                      ) : invoice.status === 'void' ? (\n                        <h5>Void</h5>\n                      ) : invoice.status === 'uncollectible' ? (\n                        <h5>Uncollectible</h5>\n                      ) : invoice.status === 'open' ? (\n                        <a href={`/services/invoice/${invoice.id}`}>\n                          <h5>Continue</h5>\n                        </a>\n                      ) : (\n                        <a>\n                          <button\n                            onClick={async () =>\n                              await dispatch(\n                                deleteInvoice(invoice.stripe_invoice_id)\n                              ).then(() => {\n                                dispatch(getClientInvoices());\n                              })\n                            }>\n                            <h5>Delete</h5>\n                          </button>\n                        </a>\n                      )}\n                    </td>\n                  </tr>\n                </>\n              ))}\n            </tbody>\n          </table>\n        </div>\n      ) : (\n        ''\n      )}\n    </>\n  );\n}\n\nexport default UserInvoiceComponent;\n","import React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { getClient } from '../../controllers/clientSlice';\nimport { getClientQuotes } from '../../controllers/quoteSlice';\n\nfunction UserQuoteComponent() {\n  const dispatch = useDispatch();\n\n  const { user_email, stripe_customer_id } = useSelector(\n    (state) => state.client\n  );\n  const { loading, quoteError, quotes, pdf } = useSelector(\n    (state) => state.quote\n  );\n\n  useEffect(() => {\n    if (user_email) {\n      dispatch(getClient());\n    }\n  }, [user_email, dispatch]);\n\n  useEffect(() => {\n    if (stripe_customer_id) {\n      dispatch(getClientQuotes());\n    }\n  }, [stripe_customer_id, dispatch]);\n\n  if (quoteError) {\n    return (\n      <>\n        <div className=\"status-bar card error\">\n          <span>\n            <h4>{quoteError}</h4>\n          </span>\n        </div>\n      </>\n    );\n  }\n\n  if (loading) {\n    return <div>Loading...</div>;\n  }\n\n  const now = new Date().getTime();\n  let sortedQuotes = [];\n\n  if (Array.isArray(quotes)) {\n    sortedQuotes = quotes.slice().sort((a, b) => {\n      const timeDiffA = Math.abs(a.expires_at - now);\n      const timeDiffB = Math.abs(b.expires_at - now);\n\n      return timeDiffA - timeDiffB;\n    });\n  }\n\n  return (\n    <>\n      {Array.isArray(sortedQuotes) && sortedQuotes.length > 0 ? (\n        <div className=\"card quote\">\n          <table>\n            <thead>\n              <tr>\n                <th>\n                  <h4>Quote ID</h4>\n                </th>\n                <th>\n                  <h4>Status</h4>\n                </th>\n                <th>\n                  <h4>Total</h4>\n                </th>\n                <th>\n                  <h4>Page</h4>\n                </th>\n              </tr>\n            </thead>\n            <tbody>\n              {sortedQuotes.map((quote) => (\n                <>\n                  <tr>\n                    <td>{quote.id}</td>\n                    <td>{quote.status}</td>\n                    <td>\n                      {new Intl.NumberFormat('us', {\n                        style: 'currency',\n                        currency: 'USD',\n                      }).format(quote.amount_total)}\n                    </td>\n                    <td>\n                      {quote.status === 'accepted' ? (\n                        <h5>Accepted</h5>\n                      ) : quote.status === 'canceled' ? (\n                        <h5>Canceled</h5>\n                      ) : (\n                        <a href={`/services/quote/${quote.id}`}>\n                          <h5>Confirm</h5>\n                        </a>\n                      )}\n                    </td>\n                  </tr>\n                </>\n              ))}\n            </tbody>\n          </table>\n        </div>\n      ) : (\n        ''\n      )}\n    </>\n  );\n}\n\nexport default UserQuoteComponent;\n","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { getClient } from '../../controllers/clientSlice';\nimport { getClientReceipts } from '../../controllers/receiptSlice';\n\nfunction UserReceiptComponent() {\n  const dispatch = useDispatch();\n\n  const { user_email, stripe_customer_id } = useSelector(\n    (state) => state.client\n  );\n  const { loading, receiptError, receipts } = useSelector(\n    (state) => state.receipt\n  );\n\n  useEffect(() => {\n    if (user_email) {\n      dispatch(getClient());\n    }\n  }, [user_email, dispatch]);\n\n  useEffect(() => {\n    if (stripe_customer_id) {\n      dispatch(getClientReceipts());\n    }\n  }, [stripe_customer_id, dispatch]);\n\n  if (receiptError) {\n    return (\n      <>\n        <div className=\"status-bar card error\">\n          <span>\n            <h4>{receiptError}</h4>\n          </span>\n        </div>\n      </>\n    );\n  }\n\n  if (loading) {\n    return <div>Loading...</div>;\n  }\n\n  const now = new Date().getTime();\n  let sortedReceipts = [];\n\n  if (Array.isArray(receipts)) {\n    sortedReceipts = receipts.slice().sort((a, b) => {\n      const timeDiffA = Math.abs(a.payment_date - now);\n      const timeDiffB = Math.abs(b.payment_date - now);\n\n      return timeDiffA - timeDiffB;\n    });\n  }\n\n  return (\n    <>\n      {Array.isArray(sortedReceipts) && sortedReceipts.length > 0 ? (\n        <div className=\"card receipt\">\n          <table>\n            <thead>\n              <tr>\n                <th>\n                  <h4>Receipt ID</h4>\n                </th>\n                <th>\n                  <h4>Amount Paid</h4>\n                </th>\n                <th>\n                  <h4>Balance</h4>\n                </th>\n                <th>\n                  <h4>Invoice ID</h4>\n                </th>\n                <th>\n                  <h4>PDF</h4>\n                </th>\n              </tr>\n            </thead>\n            <tbody>\n              {sortedReceipts.map((receipt) => (\n                <>\n                  <tr key={receipt.id}>\n                    <td>{receipt.id}</td>\n                    <td>\n                      {/* add locales column & currency column Ex: invoice.currency */}\n                      {new Intl.NumberFormat('us', {\n                        style: 'currency',\n                        currency: 'USD',\n                      }).format(receipt.amount_paid)}\n                    </td>\n                    <td>\n                      {new Intl.NumberFormat('us', {\n                        style: 'currency',\n                        currency: 'USD',\n                      }).format(receipt.balance)}\n                    </td>\n                    <td>{receipt.invoice_id}</td>\n                    <td>\n                      <a href={receipt.receipt_pdf_url} target=\"_blank\">\n                        <button>\n                          <h5>Download</h5>\n                        </button>\n                      </a>\n                    </td>\n                  </tr>\n                </>\n              ))}\n            </tbody>\n          </table>\n        </div>\n      ) : (\n        ''\n      )}\n    </>\n  );\n}\n\nexport default UserReceiptComponent;\n"],"names":["React","UserReceiptComponent","UserInvoiceComponent","UserQuoteComponent","Billing","createElement","Fragment","className","useEffect","useDispatch","useSelector","getClient","getClientInvoices","deleteInvoice","dispatch","user_email","stripe_customer_id","state","client","invoiceLoading","invoiceError","invoices","invoice","now","Date","getTime","sortedInvoices","Array","isArray","slice","sort","a","b","timeDiffA","Math","abs","due_date","timeDiffB","length","map","id","status","Intl","NumberFormat","style","currency","format","amount_remaining","toLocaleString","quote_id","href","onClick","stripe_invoice_id","then","useState","getClientQuotes","loading","quoteError","quotes","pdf","quote","sortedQuotes","expires_at","amount_total","getClientReceipts","receiptError","receipts","receipt","sortedReceipts","payment_date","key","amount_paid","balance","invoice_id","receipt_pdf_url","target"],"sourceRoot":""}