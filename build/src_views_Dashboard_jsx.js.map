{"version":3,"file":"src_views_Dashboard_jsx.js","mappings":"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","sources":["webpack://orb-services/./src/views/Dashboard.jsx","webpack://orb-services/./src/views/dashboard/UserInvoice.jsx","webpack://orb-services/./src/views/dashboard/UserQuote.jsx","webpack://orb-services/./src/views/dashboard/UserReceipt.jsx","webpack://orb-services/./src/views/dashboard/UserSchedule.jsx"],"sourcesContent":["import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport UserScheduleComponent from './dashboard/UserSchedule';\nimport UserReceiptComponent from './dashboard/UserReceipt';\nimport UserInvoiceComponent from './dashboard/UserInvoice';\nimport UserQuoteComponent from './dashboard/UserQuote';\n\nfunction DashboardComponent() {\n  return (\n    <>\n      <UserScheduleComponent />\n      <UserReceiptComponent />\n      <UserInvoiceComponent />\n      <UserQuoteComponent />\n    </>\n  );\n}\n\nexport default DashboardComponent;\n","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { getClient } from '../../controllers/clientSlice';\nimport {\n  getClientInvoices,\n  deleteInvoice,\n  getStripeInvoice,\n} from '../../controllers/invoiceSlice';\n\nfunction UserInvoiceComponent() {\n  const dispatch = useDispatch();\n\n  const { user_email, stripe_customer_id } = useSelector(\n    (state) => state.client\n  );\n  const { loading, invoiceError, invoices, stripe_invoice_id } = useSelector(\n    (state) => state.invoice\n  );\n\n  useEffect(() => {\n    if (user_email) {\n      dispatch(getClient());\n    }\n  }, [user_email, dispatch]);\n\n  useEffect(() => {\n    if (stripe_customer_id) {\n      dispatch(getClientInvoices());\n    }\n  }, [stripe_customer_id, dispatch]);\n\n  if (invoiceError) {\n    return (\n      <>\n        <div className=\"status-bar card error\">\n          <span>\n            <h4>{invoiceError}</h4>\n          </span>\n        </div>\n      </>\n    );\n  }\n\n  if (loading) {\n    return <div>Loading...</div>;\n  }\n\n  return (\n    <>\n      {Array.isArray(invoices) && invoices.length > 0 ? (\n        <div className=\"card invoice\">\n          <table>\n            <thead>\n              <tr>\n                <th>\n                  <h4>Invoice ID</h4>\n                </th>\n                <th>\n                  <h4>Status</h4>\n                </th>\n                <th>\n                  <h4>Balance</h4>\n                </th>\n                <th>\n                  <h4>Due Date</h4>\n                </th>\n                <th>\n                  <h4>Quote ID</h4>\n                </th>\n                <th>\n                  <h4>Page</h4>\n                </th>\n              </tr>\n            </thead>\n            <tbody>\n              {invoices.map((invoice) => (\n                <>\n                  <tr>\n                    <td>{invoice.id}</td>\n                    <td>{invoice.status}</td>\n                    <td>\n                      {/* add currency column using var invoice.currency */}\n                      {new Intl.NumberFormat('us', {\n                        style: 'currency',\n                        currency: 'USD',\n                      }).format(invoice.amount_remaining)}\n                    </td>\n                    <td>{invoice.due_date}</td>\n                    <td>{invoice.quote_id}</td>\n                    <td>\n                      {invoice.status === 'deleted' ? (\n                        <h5>Deleted</h5>\n                      ) : invoice.status === 'paid' ? (\n                        <a href={`/services/invoice/${invoice.id}`}>\n                          <button>\n                            <h5>View</h5>\n                          </button>\n                        </a>\n                      ) : invoice.status === 'void' ? (\n                        <h5>Void</h5>\n                      ) : invoice.status === 'uncollectible' ? (\n                        <h5>Uncollectible</h5>\n                      ) : invoice.status === 'open' ? (\n                        <a href={`/services/invoice/${invoice.id}`}>\n                          <h5>Continue</h5>\n                        </a>\n                      ) : (\n                        <a>\n                          <button\n                            onClick={async () =>\n                              await dispatch(\n                                deleteInvoice(invoice.stripe_invoice_id)\n                              ).then(() => {\n                                dispatch(getClientInvoices());\n                              })\n                            }>\n                            <h5>Delete</h5>\n                          </button>\n                        </a>\n                      )}\n                    </td>\n                  </tr>\n                </>\n              ))}\n            </tbody>\n          </table>\n        </div>\n      ) : (\n        ''\n      )}\n    </>\n  );\n}\n\nexport default UserInvoiceComponent;\n","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { getClient } from '../../controllers/clientSlice';\nimport { getClientQuotes } from '../../controllers/quoteSlice';\n\nfunction UserQuoteComponent() {\n  const dispatch = useDispatch();\n\n  const { user_email, stripe_customer_id } = useSelector(\n    (state) => state.client\n  );\n  const { loading, quoteError, quotes, pdf } = useSelector(\n    (state) => state.quote\n  );\n\n  useEffect(() => {\n    if (user_email) {\n      dispatch(getClient());\n    }\n  }, [user_email, dispatch]);\n\n  useEffect(() => {\n    if (stripe_customer_id) {\n      dispatch(getClientQuotes());\n    }\n  }, [stripe_customer_id, dispatch]);\n\n  if (quoteError) {\n    return (\n      <>\n        <div className=\"status-bar card error\">\n          <span>\n            <h4>{quoteError}</h4>\n          </span>\n        </div>\n      </>\n    );\n  }\n\n  if (loading) {\n    return <div>Loading...</div>;\n  }\n\n  return (\n    <>\n      {Array.isArray(quotes) && quotes.length > 0 ? (\n        <div className=\"card quote\">\n          <table>\n            <thead>\n              <tr>\n                <th>\n                  <h4>Quote ID</h4>\n                </th>\n                <th>\n                  <h4>Status</h4>\n                </th>\n                <th>\n                  <h4>Total</h4>\n                </th>\n                <th>\n                  <h4>Page</h4>\n                </th>\n              </tr>\n            </thead>\n            <tbody>\n              {quotes.map((quote) => (\n                <>\n                  <tr>\n                    <td>{quote.id}</td>\n                    <td>{quote.status}</td>\n                    <td>\n                      {new Intl.NumberFormat('us', {\n                        style: 'currency',\n                        currency: 'USD',\n                      }).format(quote.amount_total)}\n                    </td>\n                    <td>\n                      {quote.status === 'accepted' ? (\n                        <h5>Accepted</h5>\n                      ) : quote.status === 'canceled' ? (\n                        <h5>Canceled</h5>\n                      ) : (\n                        <a href={`/services/quote/${quote.id}`}>\n                          <h5>Confirm</h5>\n                        </a>\n                      )}\n                    </td>\n                  </tr>\n                </>\n              ))}\n            </tbody>\n          </table>\n        </div>\n      ) : (\n        ''\n      )}\n    </>\n  );\n}\n\nexport default UserQuoteComponent;\n","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { getClient } from '../../controllers/clientSlice';\nimport { getClientReceipts } from '../../controllers/receiptSlice';\n\nfunction UserReceiptComponent() {\n  const dispatch = useDispatch();\n\n  const { user_email, stripe_customer_id } = useSelector(\n    (state) => state.client\n  );\n  const { loading, receiptError, receipts } = useSelector(\n    (state) => state.receipt\n  );\n\n  useEffect(() => {\n    if (user_email) {\n      dispatch(getClient());\n    }\n  }, [user_email, dispatch]);\n\n  useEffect(() => {\n    if (stripe_customer_id) {\n      dispatch(getClientReceipts());\n    }\n  }, [stripe_customer_id, dispatch]);\n\n  if (receiptError) {\n    return (\n      <>\n        <div className=\"status-bar card error\">\n          <span>\n            <h4>{receiptError}</h4>\n          </span>\n        </div>\n      </>\n    );\n  }\n\n  if (loading) {\n    return <div>Loading...</div>;\n  }\n\n  return (\n    <>\n      {Array.isArray(receipts) && receipts.length > 0 ? (\n        <div className=\"card receipt\">\n          <table>\n            <thead>\n              <tr>\n                <th>\n                  <h4>Receipt ID</h4>\n                </th>\n                <th>\n                  <h4>Amount Paid</h4>\n                </th>\n                <th>\n                  <h4>Balance</h4>\n                </th>\n                <th>\n                  <h4>Invoice ID</h4>\n                </th>\n                <th>\n                  <h4>PDF</h4>\n                </th>\n              </tr>\n            </thead>\n            <tbody>\n              {receipts.map((receipt) => (\n                <>\n                  <tr key={receipt.id}>\n                    <td>{receipt.id}</td>\n                    <td>\n                      {/* add locales column & currency column Ex: invoice.currency */}\n                      {new Intl.NumberFormat('us', {\n                        style: 'currency',\n                        currency: 'USD',\n                      }).format(receipt.amount_paid)}\n                    </td>\n                    <td>\n                      {new Intl.NumberFormat('us', {\n                        style: 'currency',\n                        currency: 'USD',\n                      }).format(receipt.balance)}\n                    </td>\n                    <td>{receipt.invoice_id}</td>\n                    <td>\n                      <a href={receipt.receipt_pdf_url} target=\"_blank\">\n                        <button>\n                          <h5>Download</h5>\n                        </button>\n                      </a>\n                    </td>\n                  </tr>\n                </>\n              ))}\n            </tbody>\n          </table>\n        </div>\n      ) : (\n        ''\n      )}\n    </>\n  );\n}\n\nexport default UserReceiptComponent;\n","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { getClient } from '../../controllers/clientSlice';\nimport { getEvents } from '../../controllers/scheduleSlice';\n\nfunction UserScheduleComponent() {\n  const dispatch = useDispatch();\n\n  const { user_email, client_id } = useSelector((state) => state.client);\n  const { loading, error, events } = useSelector((state) => state.schedule);\n\n  useEffect(() => {\n    if (user_email) {\n      dispatch(getClient());\n    }\n  }, [user_email, dispatch]);\n\n  useEffect(() => {\n    if (client_id) {\n      dispatch(getEvents());\n    }\n  }, [client_id, dispatch]);\n\n  if (error) {\n    return (\n      <>\n        <main className=\"error\">\n          <div className=\"status-bar card\">\n            <span className=\"error\">\n              <h4>There is nothing on your schedule to show at this time</h4>\n            </span>\n          </div>\n        </main>\n      </>\n    );\n  }\n\n  if (loading) {\n    return <div>Loading...</div>;\n  }\n\n  return (\n    <>\n      {Array.isArray(events) && events.length > 0 ? (\n        <div className=\"card schedule\">\n          <table>\n            <thead>\n              <tr>\n                <th>\n                  <h4>Event ID</h4>\n                </th>\n                <th>\n                  <h4>Start Date</h4>\n                </th>\n                <th>\n                  <h4>Start Time</h4>\n                </th>\n              </tr>\n            </thead>\n            <tbody>\n              {events.map((event) => (\n                <>\n                  <tr>\n                    <td>{event.id}</td>\n                    <td>{event.start_date}</td>\n                    <td>{event.start_time}</td>\n                  </tr>\n                </>\n              ))}\n            </tbody>\n          </table>\n        </div>\n      ) : (\n        ''\n      )}\n    </>\n  );\n}\n\nexport default UserScheduleComponent;\n"],"names":["React","useEffect","useDispatch","useSelector","UserScheduleComponent","UserReceiptComponent","UserInvoiceComponent","UserQuoteComponent","DashboardComponent","createElement","Fragment","getClient","getClientInvoices","deleteInvoice","getStripeInvoice","dispatch","user_email","stripe_customer_id","state","client","loading","invoiceError","invoices","stripe_invoice_id","invoice","className","Array","isArray","length","map","id","status","Intl","NumberFormat","style","currency","format","amount_remaining","due_date","quote_id","href","onClick","then","getClientQuotes","quoteError","quotes","pdf","quote","amount_total","getClientReceipts","receiptError","receipts","receipt","key","amount_paid","balance","invoice_id","receipt_pdf_url","target","getEvents","client_id","error","events","schedule","event","start_date","start_time"],"sourceRoot":""}