{"version":3,"file":"src_views_Schedule_jsx.js","mappings":"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","sources":["webpack://orb-services/./src/views/Schedule.jsx"],"sourcesContent":["import { useEffect, useRef, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport {\n  fetchCalendarEvents,\n  updateDate,\n  updateTime,\n  updateDueDate,\n  updateEvent,\n  sendInvites,\n} from '../controllers/scheduleSlice.js';\nimport { createInvoice } from '../controllers/invoiceSlice.js';\n\nfunction ScheduleComponent() {\n  const { user_email, stripe_customer_id } = useSelector(\n    (state) => state.client\n  );\n  const { total, error } = useSelector((state) => state.quote);\n  const { loading, events, event } = useSelector(\n    (state) => state.schedule\n  );\n  const { invoice_id } = useSelector((state) => state.invoice);\n\n  const [availableDates, setAvailableDates] = useState('');\n  const [availableTimes, setAvailableTimes] = useState('');\n  const [selectedDate, setSelectedDate] = useState('');\n  const [selectedTime, setSelectedTime] = useState('');\n  const [formattedDate, setFormattedDate] = useState('');\n  const [formattedTime, setFormattedTime] = useState('');\n\n  const dateSelectRef = useRef(null);\n  const timeSelectRef = useRef(null);\n\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    dispatch(fetchCalendarEvents());\n  }, [dispatch]);\n\n  const getEvents = () => {\n    const datesAvail = events.map((event) => {\n      const dateTime = event.start['dateTime'];\n      const date = dateTime.split('T')[0];\n      return new Date(date).toLocaleDateString(undefined, {\n        year: 'numeric',\n        month: 'long',\n        day: 'numeric',\n      });\n    });\n\n    setAvailableDates(datesAvail);\n    setSelectedDate(datesAvail[0]);\n\n    const selectedIndex = dateSelectRef.current.selectedIndex;\n\n    if (selectedIndex >= 0) {\n      const timesAvail = events.map((event) => {\n        const dateTime = event.start['dateTime'];\n        const time = dateTime.split('T')[1];\n        const start = time.split('-')[0];\n        const endTime = time.split('-')[1];\n        const startHour = parseInt(start, 10);\n        const endHour =\n          parseInt(endTime, 10) < 12\n            ? parseInt(endTime, 10) + 12\n            : parseInt(endTime, 10);\n\n        const hours = [];\n\n        for (let i = startHour; i <= endHour; i++) {\n          hours.push(i);\n        }\n\n        return hours.map((hr) => {\n          return new Date(0, 0, 0, hr, 0, 0, 0).toLocaleTimeString('en-US', {\n            hour12: true,\n            hour: '2-digit',\n            minute: '2-digit',\n          });\n        });\n      });\n\n      setAvailableTimes(timesAvail[selectedIndex]);\n    }\n  };\n\n  useEffect(() => {\n    if (events) {\n      getEvents();\n    }\n  }, [events]);\n\n  useEffect(() => {\n    dateSelectRef.current = document.getElementById('date_select');\n    timeSelectRef.current = document.getElementById('time_select');\n    if (availableDates && availableDates.length > 0) {\n      setSelectedDate(availableDates[0]);\n    }\n  }, [availableDates]);\n\n  const handleDateChange = (event) => {\n    if (dateSelectRef.current) {\n      getEvents();\n      setSelectedDate(event.target.value);\n      dispatch(updateDate(event.target.value));\n      dispatch(updateDueDate());\n    }\n  };\n\n  const handleTimeChange = (event) => {\n    if (timeSelectRef.current) {\n      getEvents();\n      setSelectedTime(event.target.value);\n      dispatch(updateTime(event.target.value));\n      dispatch(updateDueDate());\n    }\n  };\n\n  useEffect(() => {\n    if (selectedDate) {\n      const date = new Date(selectedDate);\n      const year = date.getFullYear();\n      const month = String(date.getMonth() + 1).padStart(2, '0');\n      const day = String(date.getDate()).padStart(2, '0');\n\n      setFormattedDate(`${year}-${month}-${day}`);\n    }\n  }, [selectedDate]);\n\n  useEffect(() => {\n    if (selectedTime) {\n      const [time, period] = selectedTime.split(' ');\n      const [hours, minutes] = time.split(':');\n\n      let formattedHours = parseInt(hours, 10);\n      if (period === 'PM' && formattedHours !== 12) {\n        formattedHours += 12;\n      } else if (period === 'AM' && formattedHours === 12) {\n        formattedHours = 0;\n      }\n\n      const formattedHoursString = String(formattedHours).padStart(2, '0');\n      const formattedMinutesString = String(minutes).padStart(2, '0');\n\n      setFormattedTime(`${formattedHoursString}:${formattedMinutesString}:00`);\n    }\n  }, [selectedTime]);\n\n  useEffect(() => {\n    if (formattedDate && formattedTime) {\n      dispatch(\n        updateEvent({\n          summary: 'Invitation Title',\n          description: 'Invitation Description',\n          start: {\n            dateTime: `${formattedDate}T${formattedTime}`, // Replace with the start date and time\n            timeZone: 'America/New_York', // Replace with the appropriate time zone\n          },\n          end: {\n            dateTime: '2023-08-01T11:00:00', // Replace with the end date and time\n            timeZone: 'America/New_York', // Replace with the appropriate time zone\n          },\n          attendees: [\n            { email: `${user_email}` }, // Replace with the email addresses of the people you want to invite\n            { email: 'jclyonsenterprises@gmail.com' },\n          ],\n        })\n      );\n    }\n  }, [formattedDate, formattedTime, dispatch]);\n\n  useEffect(() => {\n    if (event) {\n      dispatch(sendInvites());\n    }\n  }, [event, dispatch]);\n\n  const handleClick = () => {\n    if (stripe_customer_id && total > 0) {\n      dispatch(createInvoice());\n    }\n  };\n\n  useEffect(() => {\n    if (invoice_id) {\n      navigate(`/services/invoice/${invoice_id}`);\n    }\n  }, [navigate, invoice_id]);\n\n  if (error) {\n    return <div>Error: {error}</div>;\n  }\n\n  if (loading) {\n    return <div>Loading...</div>;\n  }\n\n  return (\n    <>\n      <h2 className=\"title\">SCHEDULE</h2>\n      <div className=\"schedule\" id=\"schedule\">\n        <div className=\"schedule-select\">\n          <div className=\"date-select card\">\n            <label htmlFor=\"date\">Choose a Date</label>\n            <select\n              type=\"text\"\n              name=\"date\"\n              id=\"date_select\"\n              ref={dateSelectRef}\n              onChange={handleDateChange}\n              defaultValue={selectedDate}\n              min={new Date().toISOString().split('T')[0]} // Disable past dates\n            >\n              {availableDates ? (\n                availableDates.map((date, index) => (\n                  <option key={index} value={date}>\n                    {date}\n                  </option>\n                ))\n              ) : (\n                <option disabled>No Available Dates</option> // Show \"No Available Dates\" message\n              )}\n            </select>\n          </div>\n          <div className=\"time-select card\">\n            <label htmlFor=\"time\">Choose a Time</label>\n            <select\n              type=\"time\"\n              name=\"time\"\n              id=\"time_select\"\n              ref={timeSelectRef}\n              defaultValue={selectedTime}\n              onChange={handleTimeChange}>\n              {availableTimes && availableTimes.length > 0 ? (\n                availableTimes.map((time, index) => (\n                  <option key={index} value={time}>\n                    {time}\n                  </option>\n                ))\n              ) : (\n                <option disabled>No Available Times</option>\n              )}\n            </select>\n          </div>\n        </div>\n      </div>\n\n      <button onClick={handleClick}>\n        <h3>CONFIRM</h3>\n      </button>\n    </>\n  );\n}\n\nexport default ScheduleComponent;\n"],"names":["useEffect","useRef","useState","useNavigate","useSelector","useDispatch","fetchCalendarEvents","updateDate","updateTime","updateDueDate","updateEvent","sendInvites","createInvoice","ScheduleComponent","user_email","stripe_customer_id","state","client","total","error","quote","loading","events","event","schedule","invoice_id","invoice","availableDates","setAvailableDates","availableTimes","setAvailableTimes","selectedDate","setSelectedDate","selectedTime","setSelectedTime","formattedDate","setFormattedDate","formattedTime","setFormattedTime","dateSelectRef","timeSelectRef","dispatch","navigate","getEvents","datesAvail","map","dateTime","start","date","split","Date","toLocaleDateString","undefined","year","month","day","selectedIndex","current","timesAvail","time","endTime","startHour","parseInt","endHour","hours","i","push","hr","toLocaleTimeString","hour12","hour","minute","document","getElementById","length","handleDateChange","target","value","handleTimeChange","getFullYear","String","getMonth","padStart","getDate","period","minutes","formattedHours","formattedHoursString","formattedMinutesString","summary","description","timeZone","end","attendees","email","handleClick","createElement","Fragment","className","id","htmlFor","type","name","ref","onChange","defaultValue","min","toISOString","index","key","disabled","onClick"],"sourceRoot":""}