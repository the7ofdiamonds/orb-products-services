{"version":3,"file":"src_views_BillingReceipt_jsx.js","mappings":"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","sources":["webpack://orb-services/./src/loading/LoadingComponent.jsx","webpack://orb-services/./src/utils/PhoneNumberFormatter.js","webpack://orb-services/./src/views/BillingReceipt.jsx","webpack://orb-services/./src/views/components/StatusBar.jsx"],"sourcesContent":["function LoadingComponent() {\n  return (\n    <div className=\"loading\">\n      <h1>Loading......</h1>\n    </div>\n  );\n}\n\nexport default LoadingComponent;\n","const formatPhoneNumber = (phoneNumber) => {\n  if (typeof phoneNumber !== 'string' || phoneNumber.trim() === '') {\n    return ''; // Return an empty string for invalid phone numbers\n  }\n\n  // Remove all non-digit characters from the phone number\n  const cleaned = phoneNumber.replace(/\\D/g, '');\n\n  // Apply the desired phone number format\n  const regex = /^(\\d{1})(\\d{3})(\\d{3})(\\d{4})$/;\n  const formatted = cleaned.replace(regex, '+$1 ($2) $3-$4');\n\n  return formatted;\n};\n\nexport default formatPhoneNumber;\n","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport { getClient } from '../controllers/clientSlice.js';\nimport { getStripeCustomer } from '../controllers/customerSlice.js';\nimport { getStripeInvoice } from '../controllers/invoiceSlice.js';\nimport { getPaymentIntent } from '../controllers/paymentSlice.js';\nimport {\n  getPaymentMethod,\n  getReceiptByID,\n} from '../controllers/receiptSlice.js';\n\nimport formatPhoneNumber from '../utils/PhoneNumberFormatter.js';\n\nimport LoadingComponent from '../loading/LoadingComponent';\nimport StatusBar from '../views/components/StatusBar';\n\nfunction ReceiptComponent() {\n  const { id } = useParams();\n  const dispatch = useDispatch();\n\n  const [messageType, setMessageType] = useState('info');\n  const [message, setMessage] = useState('');\n\n  const { user_email, stripe_customer_id } = useSelector(\n    (state) => state.client\n  );\n  const {\n    company_name,\n    address_line_1,\n    address_line_2,\n    city,\n    state,\n    zipcode,\n    phone,\n  } = useSelector((state) => state.customer);\n  const {\n    selections,\n    subtotal,\n    tax,\n    amount_due,\n    amount_paid,\n    amount_remaining,\n    payment_date,\n    payment_intent_id,\n  } = useSelector((state) => state.invoice);\n  const { loading, stripe_invoice_id, payment_method, first_name, last_name } =\n    useSelector((state) => state.receipt);\n\n  const timestamp = payment_date * 1000;\n  const paymentDate = new Date(timestamp);\n  const formattedPhone = formatPhoneNumber(phone);\n  const Subtotal = subtotal / 100;\n  const Tax = tax / 100;\n  const amountDue = amount_due / 100;\n  const amountPaid = amount_paid / 100;\n  const Balance = amount_remaining / 100;\n\n  useEffect(() => {\n    if (user_email) {\n      dispatch(getClient()).then((response) => {\n        if (response.error !== undefined) {\n          console.error(response.error.message);\n          setMessageType('error');\n          setMessage(response.error.message);\n        } else {\n          dispatch(getStripeCustomer(response.payload.stripe_customer_id)).then(\n            (response) => {\n              if (response.error !== undefined) {\n                console.error(response.error.message);\n                setMessageType('error');\n                setMessage(response.error.message);\n              }\n            }\n          );\n        }\n      });\n    }\n  }, [dispatch, user_email]);\n\n  useEffect(() => {\n    if (stripe_customer_id) {\n      dispatch(getReceiptByID(id)).then((response) => {\n        if (response.error !== undefined) {\n          console.error(response.error.message);\n          setMessageType('error');\n          setMessage(response.error.message);\n        } else {\n          dispatch(getPaymentMethod(response.payload.payment_method_id)).then(\n            (response) => {\n              if (response.error !== undefined) {\n                console.error(response.error.message);\n                setMessageType('error');\n                setMessage(response.error.message);\n              }\n            }\n          );\n        }\n      });\n    }\n  }, [dispatch, id, stripe_customer_id]);\n\n  useEffect(() => {\n    if (stripe_invoice_id) {\n      dispatch(getStripeInvoice(stripe_invoice_id)).then((response) => {\n        if (response.error !== undefined) {\n          console.error(response.error.message);\n          setMessageType('error');\n          setMessage(response.error.message);\n        }\n      });\n    }\n  }, [dispatch, stripe_invoice_id]);\n\n  useEffect(() => {\n    if (payment_intent_id) {\n      dispatch(getPaymentIntent(payment_intent_id)).then((response) => {\n        if (response.error !== undefined) {\n          console.error(response.error.message);\n          setMessageType('error');\n          setMessage(response.error.message);\n        }\n      });\n    }\n  }, [dispatch, payment_intent_id]);\n\n  const handleClickDashboard = () => {\n    window.location = '/dashboard';\n  };\n\n  const handleClickBilling = () => {\n    window.location = '/billing';\n  };\n\n  if (loading) {\n    return <LoadingComponent />;\n  }\n\n  return (\n    <>\n      <h2 className=\"title\">RECEIPT</h2>\n      <div className=\"receipt-card card\">\n        <div className=\"thead\">\n          <div className=\"tr receipt-number\">\n            <div className=\"th\">\n              <h4>RECEIPT NUMBER</h4>\n            </div>\n            <div className=\"td\">\n              <h5>{id}</h5>\n            </div>\n          </div>\n          <div className=\"tr payment-date\">\n            <div className=\"th\">\n              <h4>PAYMENT DATE</h4>\n            </div>\n            <div className=\"td\">\n              <h5>{paymentDate.toLocaleString()}</h5>\n            </div>\n          </div>\n          <div className=\"tr payment-method\">\n            <div className=\"th\">\n              <h4>PAYMENT TYPE</h4>\n            </div>\n            <div className=\"td\">\n              <h5>{payment_method}</h5>\n            </div>\n          </div>\n          <div className=\"tr client-details\">\n            <div className=\"th\">\n              <h4>PAID BY</h4>\n            </div>\n            <div className=\"td\">\n              <h5>\n                {first_name} {last_name} O/B/O {company_name}\n              </h5>\n            </div>\n            <div className=\"tr address-line-1\">\n              <div className=\"td\">\n                <h5>{address_line_1}</h5>\n              </div>\n              <div className=\"td\">\n                <h5>{address_line_2}</h5>\n              </div>\n            </div>\n            <div className=\"tr address-line-2\">\n              <div className=\"td\">\n                <h5>{`${city},`}</h5>\n              </div>\n              <div className=\"td\">\n                <h5>{state}</h5>\n              </div>\n              <div className=\"td\">\n                <h5>{zipcode}</h5>\n              </div>\n            </div>\n            <div className=\"tr phone\">\n              <div className=\"td\">\n                <a href={`tel:${phone}`}>\n                  <h5>{formattedPhone}</h5>\n                </a>\n              </div>\n            </div>\n            <div className=\"tr email\">\n              <div className=\"td\">\n                <h5>{user_email}</h5>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <table>\n          <thead>\n            <th>\n              <h4>NO.</h4>\n            </th>\n            <th>\n              <h4>DESCRIPTION</h4>\n            </th>\n            <th>\n              <h4>TOTAL</h4>\n            </th>\n          </thead>\n          <tbody>\n            {selections &&\n              selections.length > 0 &&\n              selections.map((selection) => (\n                <tr>\n                  <td>\n                    <h5>{selection.id}</h5>\n                  </td>\n                  <td>\n                    <h5>{selection.description}</h5>\n                  </td>\n                  <td className=\"selections-cost\">\n                    <h5>\n                      {new Intl.NumberFormat('us', {\n                        style: 'currency',\n                        currency: 'USD',\n                      }).format(selection.cost)}\n                    </h5>\n                  </td>\n                </tr>\n              ))}\n          </tbody>\n        </table>\n\n        <div className=\"tfoot\">\n          <div className=\"tr subtotal\">\n            <div className=\"th subtotal-label\">\n              <h4>SUBTOTAL</h4>\n            </div>\n            <div className=\"td subtotal-number\">\n              <h5>\n                {new Intl.NumberFormat('us', {\n                  style: 'currency',\n                  currency: 'USD',\n                }).format(Subtotal)}\n              </h5>\n            </div>\n          </div>\n          <div className=\"tr tax\">\n            <div className=\"th tax-label\">\n              <h4>TAX</h4>\n            </div>\n            <div className=\"td tax-number\">\n              <h5>\n                {new Intl.NumberFormat('us', {\n                  style: 'currency',\n                  currency: 'USD',\n                }).format(Tax)}\n              </h5>\n            </div>\n          </div>\n          <div className=\"tr grand-total\">\n            <div className=\"th grand-total-label\">\n              <h4>GRAND TOTAL</h4>\n            </div>\n            <div className=\"td grand-total-number\">\n              <h5>\n                {new Intl.NumberFormat('us', {\n                  style: 'currency',\n                  currency: 'USD',\n                }).format(amountDue)}\n              </h5>\n            </div>\n          </div>\n          <div className=\"tr amount-paid\">\n            <div className=\"th amount-paid-label\">\n              <h4>AMOUNT PAID</h4>\n            </div>\n            <div className=\"td amount-paid-number\">\n              <h5>\n                {new Intl.NumberFormat('us', {\n                  style: 'currency',\n                  currency: 'USD',\n                }).format(amountPaid)}\n              </h5>\n            </div>\n          </div>\n          <div className=\"tr balance\">\n            <div className=\"th balance-label\">\n              <h4>BALANCE</h4>\n            </div>\n            <div className=\"td balance-number\">\n              <h5>\n                {new Intl.NumberFormat('us', {\n                  style: 'currency',\n                  currency: 'USD',\n                }).format(Balance)}\n              </h5>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <StatusBar message={message} messageType={messageType} />\n\n      <div className=\"actions\">\n        <button onClick={handleClickDashboard}>\n          <h3>DASHBOARD</h3>\n        </button>\n        <button onClick={handleClickBilling}>\n          <h3>BILLING</h3>\n        </button>\n      </div>\n    </>\n  );\n}\n\nexport default ReceiptComponent;\n","function StatusBar(props) {\n  const { message, messageType } = props;\n\n  return (\n    <>\n      {message && (\n        <div className={`status-bar card ${messageType}`}>\n          <span>{message}</span>\n        </div>\n      )}\n    </>\n  );\n}\n\nexport default StatusBar;\n"],"names":["LoadingComponent","createElement","className","formatPhoneNumber","phoneNumber","trim","cleaned","replace","regex","formatted","useState","useEffect","useParams","useSelector","useDispatch","getClient","getStripeCustomer","getStripeInvoice","getPaymentIntent","getPaymentMethod","getReceiptByID","StatusBar","ReceiptComponent","id","dispatch","messageType","setMessageType","message","setMessage","user_email","stripe_customer_id","state","client","company_name","address_line_1","address_line_2","city","zipcode","phone","customer","selections","subtotal","tax","amount_due","amount_paid","amount_remaining","payment_date","payment_intent_id","invoice","loading","stripe_invoice_id","payment_method","first_name","last_name","receipt","timestamp","paymentDate","Date","formattedPhone","Subtotal","Tax","amountDue","amountPaid","Balance","then","response","error","undefined","console","payload","payment_method_id","handleClickDashboard","window","location","handleClickBilling","Fragment","toLocaleString","href","length","map","selection","description","Intl","NumberFormat","style","currency","format","cost","onClick","props"],"sourceRoot":""}