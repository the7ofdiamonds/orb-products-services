{"version":3,"file":"src_views_ClientStart_jsx.js","mappings":"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","sources":["webpack://orb-services/./src/loading/LoadingComponent.jsx","webpack://orb-services/./src/views/ClientStart.jsx","webpack://orb-services/./src/views/components/StatusBar.jsx"],"sourcesContent":["function LoadingComponent() {\n  return <div>Loading...</div>;\n}\n\nexport default LoadingComponent;","import { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport { getClient, addClient } from '../controllers/clientSlice';\nimport {\n  updatePhone,\n  updateCompanyName,\n  updateTaxID,\n  updateFirstName,\n  updateLastName,\n  updateAddress,\n  updateAddress2,\n  updateCity,\n  updateState,\n  updateZipcode,\n  getStripeCustomer,\n  updateStripeCustomer,\n} from '../controllers/customerSlice.js';\n\nimport LoadingComponent from '../loading/LoadingComponent';\nimport StatusBar from '../views/components/StatusBar';\n\nfunction ClientComponent() {\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n\n  const [messageType, setMessageType] = useState('info');\n  const [message, setMessage] = useState(\n    'To receive a quote, please fill out the form above with the required information.'\n  );\n\n  const {\n    loading,\n    client_error,\n    user_email,\n    first_name,\n    last_name,\n    client_id,\n    stripe_customer_id,\n  } = useSelector((state) => state.client);\n  const {\n    customer_error,\n    company_name,\n    tax_id,\n    address_line_1,\n    address_line_2,\n    city,\n    state,\n    zipcode,\n    phone,\n  } = useSelector((state) => state.customer);\n\n  const handleCompanyNameChange = (event) => {\n    dispatch(updateCompanyName(event.target.value));\n  };\n\n  const handleTaxIDChange = (event) => {\n    dispatch(updateTaxID(event.target.value));\n  };\n\n  const handleFirstNameChange = (event) => {\n    dispatch(updateFirstName(event.target.value));\n  };\n\n  const handleLastNameChange = (event) => {\n    dispatch(updateLastName(event.target.value));\n  };\n\n  const handlePhoneChange = (event) => {\n    dispatch(updatePhone(event.target.value));\n  };\n\n  const handleAddressChange = (event) => {\n    dispatch(updateAddress(event.target.value));\n  };\n\n  const handleAddressChange2 = (event) => {\n    dispatch(updateAddress2(event.target.value));\n  };\n\n  const handleCityChange = (event) => {\n    dispatch(updateCity(event.target.value));\n  };\n\n  const handleStateChange = (event) => {\n    dispatch(updateState(event.target.value));\n  };\n\n  const handleZipcodeChange = (event) => {\n    dispatch(updateZipcode(event.target.value));\n  };\n\n  const [isFomCompleted, setIsFormCompleted] = useState(false);\n\n  useEffect(() => {\n    if (user_email) {\n      dispatch(getClient(user_email)).then((response) => {\n        if (response.error !== undefined) {\n          console.error(response.error.message);\n          setMessageType('error');\n          setMessage(response.error.message);\n        }\n      });\n    }\n  }, [user_email, dispatch]);\n\n  useEffect(() => {\n    if (stripe_customer_id) {\n      dispatch(getStripeCustomer()).then((response) => {\n        if (response.error !== undefined) {\n          console.error(response.error.message);\n          setMessageType('error');\n          setMessage(response.error.message);\n        }\n      });\n    }\n  }, [stripe_customer_id, navigate]);\n\n  useEffect(() => {\n    if (address_line_1 && city && state && zipcode) {\n      setIsFormCompleted(true);\n    }\n  }, [first_name, last_name, address_line_1, city, state, zipcode]);\n\n  const handleClick = async () => {\n    if (first_name === '') {\n      setMessage('Please provide a first name.');\n      setMessageType('error');\n    } else if (last_name === '') {\n      setMessage('Please provide last name.');\n      setMessageType('error');\n    } else if (address_line_1 === '') {\n      setMessage('Please provide an address.');\n      setMessageType('error');\n    } else if (city === '') {\n      setMessage('Please provide the city.');\n      setMessageType('error');\n    } else if (state === '') {\n      setMessage('Please provide the state.');\n      setMessageType('error');\n    } else if (zipcode === '') {\n      setMessage('Please provide zipcode.');\n      setMessageType('error');\n    } else if (\n      (isFomCompleted && stripe_customer_id === '') ||\n      stripe_customer_id === undefined\n    ) {\n      dispatch(addClient()).then((response) => {\n        if (response.error === undefined) {\n          navigate('/client/selections');\n        } else {\n          console.error(response.error.message);\n          setMessageType('error');\n          setMessage(response.error.message);\n        }\n      });\n    } else if (stripe_customer_id) {\n      dispatch(updateStripeCustomer()).then((response) => {\n        if (response.error === undefined) {\n          navigate('/client/selections');\n        } else {\n          console.error(response.error.message);\n          setMessageType('error');\n          setMessage(response.error.message);\n        }\n      });\n    }\n  };\n\n  if (loading) {\n    return <LoadingComponent />;\n  }\n\n  return (\n    <>\n      <h2 className=\"title\">CLIENT DETAILS</h2>\n      <div className=\"client-details card\" id=\"client-details\">\n        <form>\n          <table>\n            <thead></thead>\n            <tbody>\n              <tr>\n                <td colSpan={2}>\n                  <input\n                    className=\"input\"\n                    name=\"company_name\"\n                    id=\"company_name\"\n                    placeholder=\"Company Name\"\n                    onChange={handleCompanyNameChange}\n                    value={company_name}\n                  />\n                </td>\n                <td>\n                  <input\n                    className=\"input\"\n                    name=\"tax_id\"\n                    id=\"tax_id\"\n                    placeholder=\"Tax ID\"\n                    onChange={handleTaxIDChange}\n                    value={tax_id}\n                  />\n                </td>\n              </tr>\n              <tr>\n                <td>\n                  <input\n                    className=\"input\"\n                    name=\"first_name\"\n                    id=\"first_name\"\n                    placeholder=\"First Name\"\n                    onChange={handleFirstNameChange}\n                    value={first_name}\n                  />\n                </td>\n                <td>\n                  <input\n                    className=\"input\"\n                    name=\"last_name\"\n                    id=\"last_name\"\n                    placeholder=\"Last Name\"\n                    onChange={handleLastNameChange}\n                    value={last_name}\n                  />\n                </td>\n                <td>\n                  <input\n                    className=\"input\"\n                    name=\"phone\"\n                    type=\"tel\"\n                    placeholder=\"Phone\"\n                    onChange={handlePhoneChange}\n                    value={phone}\n                  />\n                </td>\n              </tr>\n              <tr>\n                <td colSpan={2}>\n                  <input\n                    className=\"input\"\n                    name=\"address_line_1\"\n                    id=\"bill_to_street\"\n                    placeholder=\"Street Address\"\n                    onChange={handleAddressChange}\n                    value={address_line_1}\n                  />\n                </td>\n                <td>\n                  <input\n                    className=\"input\"\n                    name=\"address_line_2\"\n                    id=\"bill_to_street2\"\n                    placeholder=\"Suite #\"\n                    onChange={handleAddressChange2}\n                    value={address_line_2}\n                  />\n                </td>\n              </tr>\n              <tr>\n                <td>\n                  <input\n                    className=\"input\"\n                    name=\"city\"\n                    id=\"bill_to_city\"\n                    placeholder=\"City\"\n                    onChange={handleCityChange}\n                    value={city}\n                  />\n                </td>\n                <td>\n                  <input\n                    className=\"input\"\n                    name=\"state\"\n                    id=\"bill_to_state\"\n                    placeholder=\"State\"\n                    onChange={handleStateChange}\n                    value={state}\n                  />\n                </td>\n                <td>\n                  <input\n                    className=\"input\"\n                    name=\"zipcode\"\n                    id=\"bill_to_zipcode\"\n                    placeholder=\"Zipcode\"\n                    onChange={handleZipcodeChange}\n                    value={zipcode}\n                  />\n                </td>\n              </tr>\n            </tbody>\n            <tfoot></tfoot>\n          </table>\n        </form>\n      </div>\n\n      <StatusBar message={message} messageType={messageType} />\n\n      <button id=\"selections_button\" onClick={handleClick}>\n        <h3>selections</h3>\n      </button>\n    </>\n  );\n}\n\nexport default ClientComponent;\n","function StatusBar(props) {\n  const { message, messageType } = props;\n\n  return (\n    <>\n      {message && (\n        <div className={`status-bar card ${messageType}`}>\n          <span>{message}</span>\n        </div>\n      )}\n    </>\n  );\n}\n\nexport default StatusBar;\n"],"names":["LoadingComponent","createElement","useState","useEffect","useNavigate","useSelector","useDispatch","getClient","addClient","updatePhone","updateCompanyName","updateTaxID","updateFirstName","updateLastName","updateAddress","updateAddress2","updateCity","updateState","updateZipcode","getStripeCustomer","updateStripeCustomer","StatusBar","ClientComponent","dispatch","navigate","messageType","setMessageType","message","setMessage","loading","client_error","user_email","first_name","last_name","client_id","stripe_customer_id","state","client","customer_error","company_name","tax_id","address_line_1","address_line_2","city","zipcode","phone","customer","handleCompanyNameChange","event","target","value","handleTaxIDChange","handleFirstNameChange","handleLastNameChange","handlePhoneChange","handleAddressChange","handleAddressChange2","handleCityChange","handleStateChange","handleZipcodeChange","isFomCompleted","setIsFormCompleted","then","response","error","undefined","console","handleClick","Fragment","className","id","colSpan","name","placeholder","onChange","type","onClick","props"],"sourceRoot":""}