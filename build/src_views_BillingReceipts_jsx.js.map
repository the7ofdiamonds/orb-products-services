{"version":3,"file":"src_views_BillingReceipts_jsx.js","mappings":"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","sources":["webpack://orb-products-services/./src/views/BillingReceipts.jsx"],"sourcesContent":["import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { getClient } from '../controllers/clientSlice';\nimport { getClientReceipts } from '../controllers/receiptSlice';\n\nfunction BillingReceipts() {\n  const dispatch = useDispatch();\n\n  const { user_email, stripe_customer_id } = useSelector(\n    (state) => state.client\n  );\n  const { loading, receiptError, receipts } = useSelector(\n    (state) => state.receipt\n  );\n\n  useEffect(() => {\n    if (user_email) {\n      dispatch(getClient());\n    }\n  }, [user_email, dispatch]);\n\n  useEffect(() => {\n    if (stripe_customer_id) {\n      dispatch(getClientReceipts());\n    }\n  }, [stripe_customer_id, dispatch]);\n\n  if (receiptError) {\n    return (\n      <>\n        <div className=\"status-bar card error\">\n          <span>\n            <h4>{receiptError}</h4>\n          </span>\n        </div>\n      </>\n    );\n  }\n\n  if (loading) {\n    return <div>Loading...</div>;\n  }\n\n  const now = new Date().getTime();\n  let sortedReceipts = [];\n\n  if (Array.isArray(receipts)) {\n    sortedReceipts = receipts.slice().sort((a, b) => {\n      const timeDiffA = Math.abs(a.payment_date - now);\n      const timeDiffB = Math.abs(b.payment_date - now);\n\n      return timeDiffA - timeDiffB;\n    });\n  }\n\n  return (\n    <>\n      {Array.isArray(sortedReceipts) && sortedReceipts.length > 0 ? (\n        <div className=\"card receipt\">\n          <table>\n            <thead>\n              <tr>\n                <th>\n                  <h4>Receipt ID</h4>\n                </th>\n                <th>\n                  <h4>Amount Paid</h4>\n                </th>\n                <th>\n                  <h4>Balance</h4>\n                </th>\n                <th>\n                  <h4>Invoice ID</h4>\n                </th>\n                <th>\n                  <h4>PDF</h4>\n                </th>\n              </tr>\n            </thead>\n            <tbody>\n              {sortedReceipts.map((receipt) => (\n                <>\n                  <tr key={receipt.id}>\n                    <td>{receipt.id}</td>\n                    <td>\n                      {/* add locales column & currency column Ex: invoice.currency */}\n                      {new Intl.NumberFormat('us', {\n                        style: 'currency',\n                        currency: 'USD',\n                      }).format(receipt.amount_paid)}\n                    </td>\n                    <td>\n                      {new Intl.NumberFormat('us', {\n                        style: 'currency',\n                        currency: 'USD',\n                      }).format(receipt.balance)}\n                    </td>\n                    <td>{receipt.invoice_id}</td>\n                    <td>\n                      <a href={receipt.receipt_pdf_url} target=\"_blank\">\n                        <button>\n                          <h5>Download</h5>\n                        </button>\n                      </a>\n                    </td>\n                  </tr>\n                </>\n              ))}\n            </tbody>\n          </table>\n        </div>\n      ) : (\n        ''\n      )}\n    </>\n  );\n}\n\nexport default BillingReceipts;\n"],"names":["React","useEffect","useDispatch","useSelector","getClient","getClientReceipts","BillingReceipts","dispatch","user_email","stripe_customer_id","state","client","loading","receiptError","receipts","receipt","createElement","Fragment","className","now","Date","getTime","sortedReceipts","Array","isArray","slice","sort","a","b","timeDiffA","Math","abs","payment_date","timeDiffB","length","map","key","id","Intl","NumberFormat","style","currency","format","amount_paid","balance","invoice_id","href","receipt_pdf_url","target"],"sourceRoot":""}